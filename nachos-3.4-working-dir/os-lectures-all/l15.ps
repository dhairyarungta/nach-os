%!PS-Adobe-3.0
%%Title: (l15)
%%Creator: (Microsoft Word: LaserWriter 8 8.1.1)
%%CreationDate: (10:33 PM Tuesday, March 14, 1995)
%%For: ()
%%Pages: 15
%%DocumentFonts: Times-Bold Times-Roman Courier
%%DocumentNeededFonts: Times-Bold Times-Roman Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -30 761 582
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 161 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
level2 startnoload
%%BeginFile: adobe_psp_patterns_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop true
}{
false
}ifelse
}{
false
}ifelse
}{
false
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_patterns_level2
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
()setjob
/pT[1 0 0 -1 30 761]def/mT[1 0 0 -1 30 761]def
initQDpatterns
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Roman
%%IncludeFont: Courier
/f0_1/Times-Bold :mre
/f1_1 f0_1 1.087 scf
/f1_14 f1_1 14 scf
/f1_12 f1_1 12 scf
/f2_1/Times-Roman :mre
/f3_1 f2_1 1.087 scf
/f3_12 f3_1 12 scf
/f4_1/Courier :mre
/f4_12 f4_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(; page: 1 of 15)setjob
%%EndPageSetup
gS 0 0 552 730 rC
60 55 :M
f1_14 sf
6.754 .675(Lecture 15: Caching: Demand Paged Virtual Memory)J
60 91 :M
7.072 .707(15.0 Main Points:)J
96 109 :M
f3_12 sf
3.162 .316(Concept of paging to disk)J
96 127 :M
5.891 .589(Replacement policies)J
96 163 :M
4.591 .459(For implementation details, read Levy and Lipman paper!)J
60 199 :M
f1_14 sf
8.11 .811(15.1 Demand Paging)J
96 235 :M
f3_12 sf
3.126 .313(Up to now, all of a job's virtual address space must be in)J
96 253 :M
6.618 .662(physical memory.)J
96 289 :M
3.29 .329(But programs don't use all of their memory all of the time.  In)J
96 307 :M
3.524 .352(fact, there is a 90-10 rule: programs spend 90% of their time in)J
96 325 :M
2.907 .291(10% of their code.)J
96 379 :M
3.348 .335(Instead, use main memory as a cache for disk.  Some pages in)J
96 397 :M
4.183 .418(memory, some on disk.)J
96 418 313 198 rC
50 15 382.5 478 @f
50 15 382.5 542 @f
-1 -1 358 544 1 1 357 476 @b
-1 -1 409 543 1 1 408 475 @b
110.5 474.5 58 115 rS
112 435 :M
(virtual )S
112 451 :M
(address )S
112 467 :M
(space)S
205.5 494.5 38 53 rS
195 566 :M
(page table)S
277.5 473.5 56 141 rS
280 440 :M
(physical)S
280 456 :M
(memory)S
365 573 :M
(disk)S
13 189 237 293 552 @k
223 507 -1 1 289 549 1 223 506 @a
13 147 195 379 505 @k
-1 -1 224 531 1 1 373 506 @b
13 125 173 298 496 @k
-1 -1 224 543 1 1 293 499 @b
gR
gS 0 0 552 730 rC
96 649 :M
f3_12 sf
.739(Benefits:)A
96 667 :M
4.19 .419(Bigger virtual address space: illusion of infinite memory)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(; page: 2 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.695 .369(Allow more programs than will fit in memory, to be running at)J
126 102 :M
5.976 .598(same time)J
90 156 :M
f1_14 sf
7.891 .789(15.2 Demand Paging Mechanism)J
126 192 :M
f3_12 sf
3.748 .375(1. Page table has "present" \(valid\) bit)J
126 210 :M
3.174 .317(    if present, pointer to page frame in memory)J
126 228 :M
2.283 .228(    if not present, go to disk)J
126 264 :M
3.529 .353(2. Hardware traps to OS on reference to invalid page)J
126 282 :M
2.654 .265(   \(In MIPS/Nachos, trap on TLB miss, OS checks page table)J
126 300 :M
5.024 .502(valid bit\))J
126 336 :M
2.796 .28(3. OS software:)J
126 354 :M
2.677 .268(  a. choose an old page to replace)J
126 372 :M
3.148 .315(  b. if old page has been modified, write contents back to disk)J
126 390 :M
3.037 .304(  c. change its page table entry and TLB entry)J
126 408 :M
3.195 .319(  d. load new page into memory from disk)J
126 426 :M
3.545 .354(  e. update page table entry)J
126 444 :M
3.365 .336(  f. continue thread)J
126 498 :M
3.47 .347(All this is transparent: OS just runs another job in the)J
126 516 :M
1.289(meantime.)A
90 552 :M
f1_12 sf
9.221 .922(15.2.1 Software-loaded TLB)J
126 570 :M
f3_12 sf
3.821 .382(Instead of having the hardware load the TLB when a)J
126 588 :M
4.64 .464(translation doesn't match, the MIPS/Snake/Nachos TLB is)J
126 606 :M
f1_12 sf
7.44 .744(software loaded)J
f3_12 sf
2.984 .298(.  Idea is, if have high TLB hit rate, ok to trap)J
126 624 :M
2.75 .275(to software to fill TLB, even if it's a bit slower.)J
126 660 :M
3.425 .342(How do we implement this?  How can a process run without)J
126 678 :M
3.541 .354(access to a page table?)J
126 714 :M
4.301 .43(Basic mechanism \(just generalization of above\):)J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(; page: 3 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 102 :M
f3_12 sf
3.217 .322(1. TLB has "present" \(valid\) bit)J
126 120 :M
3.174 .317(    if present, pointer to page frame in memory)J
126 138 :M
2.981 .298(    if not present, use page table in memory)J
126 174 :M
3.038 .304(2. Hardware traps to OS on reference not in TLB)J
126 210 :M
2.796 .28(3. OS software:)J
126 246 :M
2.596 .26(  a. check if page is in memory)J
126 264 :M
2.594 .259(  b. if yes, load page table entry into TLB)J
126 282 :M
3.44 .344(  c. if no, perform page fault operations outlined above)J
126 300 :M
3.503 .35(  d. continue thread)J
126 336 :M
3.225 .322(Paging to disk, or even having software load the TLB -- all this)J
126 354 :M
4.51 .451(is transparent -- job doesn't know it happened.)J
90 390 :M
f1_12 sf
8.49 .849(15.2.1 Transparent page faults)J
126 444 :M
f3_12 sf
5.486 .549(Need to transparently re-start faulting instruction.)J
126 480 :M
4.195 .419(Hardware must help out, by saving:)J
126 498 :M
4.364 .436(1. faulting instruction \(need to know which instruction caused)J
144 516 :M
1.152(fault\))A
126 534 :M
4.817 .482(2. processor state)J
126 570 :M
3.646 .365(What if an instruction has side effects \(CISC processors\)?)J
162 607 :M
f4_12 sf
-.215( mov \(sp\)+,10)A
126 642 :M
f3_12 sf
4.19 .419(Two options:)J
126 660 :M
3.259 .326(    unwind side-effects)J
126 678 :M
2.724 .272(    finish off side-effects)J
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(; page: 4 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.4 .34(Are RISCs easier?  What about delayed loads?  Delayed)J
126 102 :M
1.358(branches?)A
162 121 :M
f4_12 sf
-.212(    ld \(sp\), r1)A
126 156 :M
f3_12 sf
3.429 .343(What if next instruction causes page fault, while load is still in)J
126 174 :M
3.326 .333(progress?  Have to save enough state to allow CPU to restart.)J
126 210 :M
4.676 .468(Lots of hardware designers don't think about virtual memory.)J
126 228 :M
4.002 .4(For example:  block transfer instruction.  Source, destination)J
126 246 :M
4.474 .447(can be overlapping \(destination before source\).  Overwrite part)J
126 264 :M
4.356 .436(of source as instruction proceeds.)J
126 267 253 157 rC
231.5 288.5 72 134 rS
310 317 :M
(dest begin)S
317 360 :M
(dest end)S
146 339 :M
(source begin)S
157 383 :M
(source end)S
:a
56 <0102040810204080
><010101020202040404080808101010202020404040808080
>fg bk :b
231 334 73 49 rF
:e
0 G
231.5 334.5 72 48 rS
231.5 310.5 72 48 rS
gR
gS 30 31 552 730 rC
126 457 :M
f3_12 sf
4.101 .41(No way to unwind instruction!)J
90 529 :M
f1_14 sf
8.684 .868(15.3 Page replacement policies)J
126 565 :M
f3_12 sf
3.885 .388(Replacement policy is an issue with any caching system.)J
90 601 :M
f1_12 sf
9.904 .99(15.3.1 Random?)J
126 619 :M
f3_12 sf
3.45 .345(Typical solution for TLB's.  Easy to implement in hardware.)J
90 655 :M
f1_12 sf
7.36 .736(15.3.2. FIFO?)J
126 673 :M
f3_12 sf
3.113 .311(Throw out oldest page.  Be fair -- let every page live in)J
126 691 :M
3.736 .374(memory for the same amount of time, then toss it.)J
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(; page: 5 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
4.027 .403(Bad, because throws out heavily used pages instead of those)J
126 102 :M
4.859 .486(that are not frequently used.)J
90 138 :M
f1_12 sf
8.533 .853(15.3.3. MIN)J
126 174 :M
f3_12 sf
3.651 .365(Replace page that won't be used for the longest time into the)J
126 192 :M
1.267(future.)A
126 228 :M
3.366 .337(Can divide page faults \(or any cache miss\) into one of three)J
126 246 :M
.851(categories:)A
126 282 :M
f1_12 sf
1.332(Compulsory)A
f3_12 sf
4.316 .432(: first reference, assume infinite cache)J
126 318 :M
f1_12 sf
1.145(Capacity)A
f3_12 sf
3.95 .395(: non-compulsory misses due to limited size cache and)J
126 336 :M
5.315 .531(limited associativity, assuming optimal page replacement)J
126 372 :M
f1_12 sf
1.116(Conflict)A
f3_12 sf
4.837 .484(: remainder, due to non-optimal page replacement)J
126 408 :M
3.403 .34(Choice of replacement policy can only have an affect on conflict)J
126 426 :M
.98(misses!)A
90 462 :M
f1_12 sf
7.167 .717(15.3.4. LRU)J
126 498 :M
f3_12 sf
3.917 .392(Replace page that hasn't been used for the longest time.)J
126 534 :M
3.13 .313(If induction works, LRU is a good approximation to MIN.)J
126 552 :M
3.818 .382(Actually, people don't use even LRU, they approximate it.)J
90 588 :M
f1_12 sf
9.938 .994(15.3.5 Example)J
126 624 :M
f3_12 sf
3.987 .399(Suppose we have3 page frames, and 4 virtual pages, with the)J
126 642 :M
2.106 .211(reference string: A B C A B D A D B C B \(virtual page references\))J
126 678 :M
4.229 .423(What happens with FIFO?)J
90 697 :M
1.314(reference)A
90 715 :M
5.142 .514(phys slot)J
162 697 :M
(A)S
198 697 :M
(B)S
234 697 :M
(C)S
270 697 :M
(A)S
306 697 :M
(B)S
342 697 :M
(D)S
378 697 :M
(A)S
414 697 :M
(D)S
450 697 :M
(B)S
486 697 :M
(C)S
522 697 :M
(B)S
-1 -1 86 682 1 1 85 681 @b
-1 -1 86 682 1 1 85 681 @b
86 682 -1 1 157 681 1 86 681 @a
-1 -1 158 682 1 1 157 681 @b
158 682 -1 1 193 681 1 158 681 @a
-1 -1 194 682 1 1 193 681 @b
194 682 -1 1 229 681 1 194 681 @a
-1 -1 230 682 1 1 229 681 @b
230 682 -1 1 265 681 1 230 681 @a
-1 -1 266 682 1 1 265 681 @b
266 682 -1 1 301 681 1 266 681 @a
-1 -1 302 682 1 1 301 681 @b
302 682 -1 1 337 681 1 302 681 @a
-1 -1 338 682 1 1 337 681 @b
338 682 -1 1 373 681 1 338 681 @a
-1 -1 374 682 1 1 373 681 @b
374 682 -1 1 409 681 1 374 681 @a
-1 -1 410 682 1 1 409 681 @b
410 682 -1 1 445 681 1 410 681 @a
-1 -1 446 682 1 1 445 681 @b
446 682 -1 1 481 681 1 446 681 @a
-1 -1 482 682 1 1 481 681 @b
482 682 -1 1 517 681 1 482 681 @a
-1 -1 518 682 1 1 517 681 @b
518 682 -1 1 553 681 1 518 681 @a
-1 -1 554 682 1 1 553 681 @b
-1 -1 554 682 1 1 553 681 @b
-1 -1 86 718 1 1 85 682 @b
-1 -1 86 719 1 1 85 718 @b
-1 -1 86 719 1 1 85 718 @b
86 719 -1 1 157 718 1 86 718 @a
-1 -1 158 718 1 1 157 682 @b
-1 -1 158 719 1 1 157 718 @b
158 719 -1 1 193 718 1 158 718 @a
-1 -1 194 718 1 1 193 682 @b
-1 -1 194 719 1 1 193 718 @b
194 719 -1 1 229 718 1 194 718 @a
-1 -1 230 718 1 1 229 682 @b
-1 -1 230 719 1 1 229 718 @b
230 719 -1 1 265 718 1 230 718 @a
-1 -1 266 718 1 1 265 682 @b
-1 -1 266 719 1 1 265 718 @b
266 719 -1 1 301 718 1 266 718 @a
-1 -1 302 718 1 1 301 682 @b
-1 -1 302 719 1 1 301 718 @b
302 719 -1 1 337 718 1 302 718 @a
-1 -1 338 718 1 1 337 682 @b
-1 -1 338 719 1 1 337 718 @b
338 719 -1 1 373 718 1 338 718 @a
-1 -1 374 718 1 1 373 682 @b
-1 -1 374 719 1 1 373 718 @b
374 719 -1 1 409 718 1 374 718 @a
-1 -1 410 718 1 1 409 682 @b
-1 -1 410 719 1 1 409 718 @b
410 719 -1 1 445 718 1 410 718 @a
-1 -1 446 718 1 1 445 682 @b
-1 -1 446 719 1 1 445 718 @b
446 719 -1 1 481 718 1 446 718 @a
-1 -1 482 718 1 1 481 682 @b
-1 -1 482 719 1 1 481 718 @b
482 719 -1 1 517 718 1 482 718 @a
-1 -1 518 718 1 1 517 682 @b
-1 -1 518 719 1 1 517 718 @b
518 719 -1 1 553 718 1 518 718 @a
-1 -1 554 718 1 1 553 682 @b
-1 -1 554 719 1 1 553 718 @b
-1 -1 554 719 1 1 553 718 @b
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(; page: 6 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 88 :M
f3_12 sf
(1)S
162 88 :M
(A)S
342 88 :M
(D)S
486 88 :M
(C)S
-1 -1 86 73 1 1 85 72 @b
-1 -1 86 73 1 1 85 72 @b
86 73 -1 1 157 72 1 86 72 @a
-1 -1 158 73 1 1 157 72 @b
158 73 -1 1 193 72 1 158 72 @a
-1 -1 194 73 1 1 193 72 @b
194 73 -1 1 229 72 1 194 72 @a
-1 -1 230 73 1 1 229 72 @b
230 73 -1 1 265 72 1 230 72 @a
-1 -1 266 73 1 1 265 72 @b
266 73 -1 1 301 72 1 266 72 @a
-1 -1 302 73 1 1 301 72 @b
302 73 -1 1 337 72 1 302 72 @a
-1 -1 338 73 1 1 337 72 @b
338 73 -1 1 373 72 1 338 72 @a
-1 -1 374 73 1 1 373 72 @b
374 73 -1 1 409 72 1 374 72 @a
-1 -1 410 73 1 1 409 72 @b
410 73 -1 1 445 72 1 410 72 @a
-1 -1 446 73 1 1 445 72 @b
446 73 -1 1 481 72 1 446 72 @a
-1 -1 482 73 1 1 481 72 @b
482 73 -1 1 517 72 1 482 72 @a
-1 -1 518 73 1 1 517 72 @b
518 73 -1 1 553 72 1 518 72 @a
-1 -1 554 73 1 1 553 72 @b
-1 -1 554 73 1 1 553 72 @b
-1 -1 86 91 1 1 85 73 @b
-1 -1 158 91 1 1 157 73 @b
-1 -1 194 91 1 1 193 73 @b
-1 -1 230 91 1 1 229 73 @b
-1 -1 266 91 1 1 265 73 @b
-1 -1 302 91 1 1 301 73 @b
-1 -1 338 91 1 1 337 73 @b
-1 -1 374 91 1 1 373 73 @b
-1 -1 410 91 1 1 409 73 @b
-1 -1 446 91 1 1 445 73 @b
-1 -1 482 91 1 1 481 73 @b
-1 -1 518 91 1 1 517 73 @b
-1 -1 554 91 1 1 553 73 @b
90 107 :M
(2)S
198 107 :M
(B)S
378 107 :M
(A)S
-1 -1 86 92 1 1 85 91 @b
86 92 -1 1 157 91 1 86 91 @a
-1 -1 158 92 1 1 157 91 @b
158 92 -1 1 193 91 1 158 91 @a
-1 -1 194 92 1 1 193 91 @b
194 92 -1 1 229 91 1 194 91 @a
-1 -1 230 92 1 1 229 91 @b
230 92 -1 1 265 91 1 230 91 @a
-1 -1 266 92 1 1 265 91 @b
266 92 -1 1 301 91 1 266 91 @a
-1 -1 302 92 1 1 301 91 @b
302 92 -1 1 337 91 1 302 91 @a
-1 -1 338 92 1 1 337 91 @b
338 92 -1 1 373 91 1 338 91 @a
-1 -1 374 92 1 1 373 91 @b
374 92 -1 1 409 91 1 374 91 @a
-1 -1 410 92 1 1 409 91 @b
410 92 -1 1 445 91 1 410 91 @a
-1 -1 446 92 1 1 445 91 @b
446 92 -1 1 481 91 1 446 91 @a
-1 -1 482 92 1 1 481 91 @b
482 92 -1 1 517 91 1 482 91 @a
-1 -1 518 92 1 1 517 91 @b
518 92 -1 1 553 91 1 518 91 @a
-1 -1 554 92 1 1 553 91 @b
-1 -1 86 110 1 1 85 92 @b
-1 -1 158 110 1 1 157 92 @b
-1 -1 194 110 1 1 193 92 @b
-1 -1 230 110 1 1 229 92 @b
-1 -1 266 110 1 1 265 92 @b
-1 -1 302 110 1 1 301 92 @b
-1 -1 338 110 1 1 337 92 @b
-1 -1 374 110 1 1 373 92 @b
-1 -1 410 110 1 1 409 92 @b
-1 -1 446 110 1 1 445 92 @b
-1 -1 482 110 1 1 481 92 @b
-1 -1 518 110 1 1 517 92 @b
-1 -1 554 110 1 1 553 92 @b
90 126 :M
(3)S
234 126 :M
(C)S
450 126 :M
(B)S
-1 -1 86 111 1 1 85 110 @b
86 111 -1 1 157 110 1 86 110 @a
-1 -1 158 111 1 1 157 110 @b
158 111 -1 1 193 110 1 158 110 @a
-1 -1 194 111 1 1 193 110 @b
194 111 -1 1 229 110 1 194 110 @a
-1 -1 230 111 1 1 229 110 @b
230 111 -1 1 265 110 1 230 110 @a
-1 -1 266 111 1 1 265 110 @b
266 111 -1 1 301 110 1 266 110 @a
-1 -1 302 111 1 1 301 110 @b
302 111 -1 1 337 110 1 302 110 @a
-1 -1 338 111 1 1 337 110 @b
338 111 -1 1 373 110 1 338 110 @a
-1 -1 374 111 1 1 373 110 @b
374 111 -1 1 409 110 1 374 110 @a
-1 -1 410 111 1 1 409 110 @b
410 111 -1 1 445 110 1 410 110 @a
-1 -1 446 111 1 1 445 110 @b
446 111 -1 1 481 110 1 446 110 @a
-1 -1 482 111 1 1 481 110 @b
482 111 -1 1 517 110 1 482 110 @a
-1 -1 518 111 1 1 517 110 @b
518 111 -1 1 553 110 1 518 110 @a
-1 -1 554 111 1 1 553 110 @b
-1 -1 86 129 1 1 85 111 @b
-1 -1 86 130 1 1 85 129 @b
-1 -1 86 130 1 1 85 129 @b
86 130 -1 1 157 129 1 86 129 @a
-1 -1 158 129 1 1 157 111 @b
-1 -1 158 130 1 1 157 129 @b
158 130 -1 1 193 129 1 158 129 @a
-1 -1 194 129 1 1 193 111 @b
-1 -1 194 130 1 1 193 129 @b
194 130 -1 1 229 129 1 194 129 @a
-1 -1 230 129 1 1 229 111 @b
-1 -1 230 130 1 1 229 129 @b
230 130 -1 1 265 129 1 230 129 @a
-1 -1 266 129 1 1 265 111 @b
-1 -1 266 130 1 1 265 129 @b
266 130 -1 1 301 129 1 266 129 @a
-1 -1 302 129 1 1 301 111 @b
-1 -1 302 130 1 1 301 129 @b
302 130 -1 1 337 129 1 302 129 @a
-1 -1 338 129 1 1 337 111 @b
-1 -1 338 130 1 1 337 129 @b
338 130 -1 1 373 129 1 338 129 @a
-1 -1 374 129 1 1 373 111 @b
-1 -1 374 130 1 1 373 129 @b
374 130 -1 1 409 129 1 374 129 @a
-1 -1 410 129 1 1 409 111 @b
-1 -1 410 130 1 1 409 129 @b
410 130 -1 1 445 129 1 410 129 @a
-1 -1 446 129 1 1 445 111 @b
-1 -1 446 130 1 1 445 129 @b
446 130 -1 1 481 129 1 446 129 @a
-1 -1 482 129 1 1 481 111 @b
-1 -1 482 130 1 1 481 129 @b
482 130 -1 1 517 129 1 482 129 @a
-1 -1 518 129 1 1 517 111 @b
-1 -1 518 130 1 1 517 129 @b
518 130 -1 1 553 129 1 518 129 @a
-1 -1 554 129 1 1 553 111 @b
-1 -1 554 130 1 1 553 129 @b
-1 -1 554 130 1 1 553 129 @b
108 145 :M
f1_12 sf
6.925 .693(Page faults in physical memory, with FIFO replacement)J
126 181 :M
f3_12 sf
4.444 .444(What about MIN?)J
90 218 :M
1.314(reference)A
90 236 :M
5.142 .514(phys slot)J
162 218 :M
(A)S
198 218 :M
(B)S
234 218 :M
(C)S
270 218 :M
(A)S
306 218 :M
(B)S
342 218 :M
(D)S
378 218 :M
(A)S
414 218 :M
(D)S
450 218 :M
(B)S
486 218 :M
(C)S
522 218 :M
(B)S
-1 -1 86 203 1 1 85 202 @b
-1 -1 86 203 1 1 85 202 @b
86 203 -1 1 157 202 1 86 202 @a
-1 -1 158 203 1 1 157 202 @b
158 203 -1 1 193 202 1 158 202 @a
-1 -1 194 203 1 1 193 202 @b
194 203 -1 1 229 202 1 194 202 @a
-1 -1 230 203 1 1 229 202 @b
230 203 -1 1 265 202 1 230 202 @a
-1 -1 266 203 1 1 265 202 @b
266 203 -1 1 301 202 1 266 202 @a
-1 -1 302 203 1 1 301 202 @b
302 203 -1 1 337 202 1 302 202 @a
-1 -1 338 203 1 1 337 202 @b
338 203 -1 1 373 202 1 338 202 @a
-1 -1 374 203 1 1 373 202 @b
374 203 -1 1 409 202 1 374 202 @a
-1 -1 410 203 1 1 409 202 @b
410 203 -1 1 445 202 1 410 202 @a
-1 -1 446 203 1 1 445 202 @b
446 203 -1 1 481 202 1 446 202 @a
-1 -1 482 203 1 1 481 202 @b
482 203 -1 1 517 202 1 482 202 @a
-1 -1 518 203 1 1 517 202 @b
518 203 -1 1 553 202 1 518 202 @a
-1 -1 554 203 1 1 553 202 @b
-1 -1 554 203 1 1 553 202 @b
-1 -1 86 239 1 1 85 203 @b
-1 -1 158 239 1 1 157 203 @b
-1 -1 194 239 1 1 193 203 @b
-1 -1 230 239 1 1 229 203 @b
-1 -1 266 239 1 1 265 203 @b
-1 -1 302 239 1 1 301 203 @b
-1 -1 338 239 1 1 337 203 @b
-1 -1 374 239 1 1 373 203 @b
-1 -1 410 239 1 1 409 203 @b
-1 -1 446 239 1 1 445 203 @b
-1 -1 482 239 1 1 481 203 @b
-1 -1 518 239 1 1 517 203 @b
-1 -1 554 239 1 1 553 203 @b
90 255 :M
(1)S
162 255 :M
(A)S
486 255 :M
(C)S
-1 -1 86 240 1 1 85 239 @b
86 240 -1 1 157 239 1 86 239 @a
-1 -1 158 240 1 1 157 239 @b
158 240 -1 1 193 239 1 158 239 @a
-1 -1 194 240 1 1 193 239 @b
194 240 -1 1 229 239 1 194 239 @a
-1 -1 230 240 1 1 229 239 @b
230 240 -1 1 265 239 1 230 239 @a
-1 -1 266 240 1 1 265 239 @b
266 240 -1 1 301 239 1 266 239 @a
-1 -1 302 240 1 1 301 239 @b
302 240 -1 1 337 239 1 302 239 @a
-1 -1 338 240 1 1 337 239 @b
338 240 -1 1 373 239 1 338 239 @a
-1 -1 374 240 1 1 373 239 @b
374 240 -1 1 409 239 1 374 239 @a
-1 -1 410 240 1 1 409 239 @b
410 240 -1 1 445 239 1 410 239 @a
-1 -1 446 240 1 1 445 239 @b
446 240 -1 1 481 239 1 446 239 @a
-1 -1 482 240 1 1 481 239 @b
482 240 -1 1 517 239 1 482 239 @a
-1 -1 518 240 1 1 517 239 @b
518 240 -1 1 553 239 1 518 239 @a
-1 -1 554 240 1 1 553 239 @b
-1 -1 86 258 1 1 85 240 @b
-1 -1 158 258 1 1 157 240 @b
-1 -1 194 258 1 1 193 240 @b
-1 -1 230 258 1 1 229 240 @b
-1 -1 266 258 1 1 265 240 @b
-1 -1 302 258 1 1 301 240 @b
-1 -1 338 258 1 1 337 240 @b
-1 -1 374 258 1 1 373 240 @b
-1 -1 410 258 1 1 409 240 @b
-1 -1 446 258 1 1 445 240 @b
-1 -1 482 258 1 1 481 240 @b
-1 -1 518 258 1 1 517 240 @b
-1 -1 554 258 1 1 553 240 @b
90 274 :M
(2)S
198 274 :M
(B)S
-1 -1 86 259 1 1 85 258 @b
86 259 -1 1 157 258 1 86 258 @a
-1 -1 158 259 1 1 157 258 @b
158 259 -1 1 193 258 1 158 258 @a
-1 -1 194 259 1 1 193 258 @b
194 259 -1 1 229 258 1 194 258 @a
-1 -1 230 259 1 1 229 258 @b
230 259 -1 1 265 258 1 230 258 @a
-1 -1 266 259 1 1 265 258 @b
266 259 -1 1 301 258 1 266 258 @a
-1 -1 302 259 1 1 301 258 @b
302 259 -1 1 337 258 1 302 258 @a
-1 -1 338 259 1 1 337 258 @b
338 259 -1 1 373 258 1 338 258 @a
-1 -1 374 259 1 1 373 258 @b
374 259 -1 1 409 258 1 374 258 @a
-1 -1 410 259 1 1 409 258 @b
410 259 -1 1 445 258 1 410 258 @a
-1 -1 446 259 1 1 445 258 @b
446 259 -1 1 481 258 1 446 258 @a
-1 -1 482 259 1 1 481 258 @b
482 259 -1 1 517 258 1 482 258 @a
-1 -1 518 259 1 1 517 258 @b
518 259 -1 1 553 258 1 518 258 @a
-1 -1 554 259 1 1 553 258 @b
-1 -1 86 277 1 1 85 259 @b
-1 -1 158 277 1 1 157 259 @b
-1 -1 194 277 1 1 193 259 @b
-1 -1 230 277 1 1 229 259 @b
-1 -1 266 277 1 1 265 259 @b
-1 -1 302 277 1 1 301 259 @b
-1 -1 338 277 1 1 337 259 @b
-1 -1 374 277 1 1 373 259 @b
-1 -1 410 277 1 1 409 259 @b
-1 -1 446 277 1 1 445 259 @b
-1 -1 482 277 1 1 481 259 @b
-1 -1 518 277 1 1 517 259 @b
-1 -1 554 277 1 1 553 259 @b
90 293 :M
(3)S
234 293 :M
(C)S
342 293 :M
(D)S
-1 -1 86 278 1 1 85 277 @b
86 278 -1 1 157 277 1 86 277 @a
-1 -1 158 278 1 1 157 277 @b
158 278 -1 1 193 277 1 158 277 @a
-1 -1 194 278 1 1 193 277 @b
194 278 -1 1 229 277 1 194 277 @a
-1 -1 230 278 1 1 229 277 @b
230 278 -1 1 265 277 1 230 277 @a
-1 -1 266 278 1 1 265 277 @b
266 278 -1 1 301 277 1 266 277 @a
-1 -1 302 278 1 1 301 277 @b
302 278 -1 1 337 277 1 302 277 @a
-1 -1 338 278 1 1 337 277 @b
338 278 -1 1 373 277 1 338 277 @a
-1 -1 374 278 1 1 373 277 @b
374 278 -1 1 409 277 1 374 277 @a
-1 -1 410 278 1 1 409 277 @b
410 278 -1 1 445 277 1 410 277 @a
-1 -1 446 278 1 1 445 277 @b
446 278 -1 1 481 277 1 446 277 @a
-1 -1 482 278 1 1 481 277 @b
482 278 -1 1 517 277 1 482 277 @a
-1 -1 518 278 1 1 517 277 @b
518 278 -1 1 553 277 1 518 277 @a
-1 -1 554 278 1 1 553 277 @b
-1 -1 86 296 1 1 85 278 @b
-1 -1 86 297 1 1 85 296 @b
-1 -1 86 297 1 1 85 296 @b
86 297 -1 1 157 296 1 86 296 @a
-1 -1 158 296 1 1 157 278 @b
-1 -1 158 297 1 1 157 296 @b
158 297 -1 1 193 296 1 158 296 @a
-1 -1 194 296 1 1 193 278 @b
-1 -1 194 297 1 1 193 296 @b
194 297 -1 1 229 296 1 194 296 @a
-1 -1 230 296 1 1 229 278 @b
-1 -1 230 297 1 1 229 296 @b
230 297 -1 1 265 296 1 230 296 @a
-1 -1 266 296 1 1 265 278 @b
-1 -1 266 297 1 1 265 296 @b
266 297 -1 1 301 296 1 266 296 @a
-1 -1 302 296 1 1 301 278 @b
-1 -1 302 297 1 1 301 296 @b
302 297 -1 1 337 296 1 302 296 @a
-1 -1 338 296 1 1 337 278 @b
-1 -1 338 297 1 1 337 296 @b
338 297 -1 1 373 296 1 338 296 @a
-1 -1 374 296 1 1 373 278 @b
-1 -1 374 297 1 1 373 296 @b
374 297 -1 1 409 296 1 374 296 @a
-1 -1 410 296 1 1 409 278 @b
-1 -1 410 297 1 1 409 296 @b
410 297 -1 1 445 296 1 410 296 @a
-1 -1 446 296 1 1 445 278 @b
-1 -1 446 297 1 1 445 296 @b
446 297 -1 1 481 296 1 446 296 @a
-1 -1 482 296 1 1 481 278 @b
-1 -1 482 297 1 1 481 296 @b
482 297 -1 1 517 296 1 482 296 @a
-1 -1 518 296 1 1 517 278 @b
-1 -1 518 297 1 1 517 296 @b
518 297 -1 1 553 296 1 518 296 @a
-1 -1 554 296 1 1 553 278 @b
-1 -1 554 297 1 1 553 296 @b
-1 -1 554 297 1 1 553 296 @b
109 312 :M
f1_12 sf
7.177 .718(Page faults in physical memory, with MIN replacement)J
126 348 :M
f3_12 sf
3.179 .318(What about LRU?  Same decisions as MIN, but won't always be)J
126 366 :M
4.904 .49(this way!)J
126 420 :M
3.45 .345(When will LRU perform badly?  When next reference is to the)J
126 438 :M
4.727 .473(least recently used page.)J
126 474 :M
.807 .081(Reference string: A B C D A B C D A B C D)J
90 511 :M
1.314(reference)A
90 529 :M
5.142 .514(phys slot)J
162 511 :M
(A)S
194 511 :M
(B)S
226 511 :M
(C)S
259 511 :M
(D)S
291 511 :M
(A)S
324 511 :M
(B)S
356 511 :M
(C)S
388 511 :M
(D)S
421 511 :M
(A)S
453 511 :M
(B)S
486 511 :M
(C)S
518 511 :M
(D)S
-1 -1 86 496 1 1 85 495 @b
-1 -1 86 496 1 1 85 495 @b
86 496 -1 1 157 495 1 86 495 @a
-1 -1 158 496 1 1 157 495 @b
158 496 -1 1 189 495 1 158 495 @a
-1 -1 190 496 1 1 189 495 @b
190 496 -1 1 221 495 1 190 495 @a
-1 -1 222 496 1 1 221 495 @b
222 496 -1 1 254 495 1 222 495 @a
-1 -1 255 496 1 1 254 495 @b
255 496 -1 1 286 495 1 255 495 @a
-1 -1 287 496 1 1 286 495 @b
287 496 -1 1 319 495 1 287 495 @a
-1 -1 320 496 1 1 319 495 @b
320 496 -1 1 351 495 1 320 495 @a
-1 -1 352 496 1 1 351 495 @b
352 496 -1 1 383 495 1 352 495 @a
-1 -1 384 496 1 1 383 495 @b
384 496 -1 1 416 495 1 384 495 @a
-1 -1 417 496 1 1 416 495 @b
417 496 -1 1 448 495 1 417 495 @a
-1 -1 449 496 1 1 448 495 @b
449 496 -1 1 481 495 1 449 495 @a
-1 -1 482 496 1 1 481 495 @b
482 496 -1 1 513 495 1 482 495 @a
-1 -1 514 496 1 1 513 495 @b
514 496 -1 1 545 495 1 514 495 @a
-1 -1 546 496 1 1 545 495 @b
-1 -1 546 496 1 1 545 495 @b
-1 -1 86 532 1 1 85 496 @b
-1 -1 158 532 1 1 157 496 @b
-1 -1 190 532 1 1 189 496 @b
-1 -1 222 532 1 1 221 496 @b
-1 -1 255 532 1 1 254 496 @b
-1 -1 287 532 1 1 286 496 @b
-1 -1 320 532 1 1 319 496 @b
-1 -1 352 532 1 1 351 496 @b
-1 -1 384 532 1 1 383 496 @b
-1 -1 417 532 1 1 416 496 @b
-1 -1 449 532 1 1 448 496 @b
-1 -1 482 532 1 1 481 496 @b
-1 -1 514 532 1 1 513 496 @b
-1 -1 546 532 1 1 545 496 @b
90 548 :M
(1)S
162 548 :M
(A)S
259 548 :M
(D)S
356 548 :M
(C)S
453 548 :M
(B)S
-1 -1 86 533 1 1 85 532 @b
86 533 -1 1 157 532 1 86 532 @a
-1 -1 158 533 1 1 157 532 @b
158 533 -1 1 189 532 1 158 532 @a
-1 -1 190 533 1 1 189 532 @b
190 533 -1 1 221 532 1 190 532 @a
-1 -1 222 533 1 1 221 532 @b
222 533 -1 1 254 532 1 222 532 @a
-1 -1 255 533 1 1 254 532 @b
255 533 -1 1 286 532 1 255 532 @a
-1 -1 287 533 1 1 286 532 @b
287 533 -1 1 319 532 1 287 532 @a
-1 -1 320 533 1 1 319 532 @b
320 533 -1 1 351 532 1 320 532 @a
-1 -1 352 533 1 1 351 532 @b
352 533 -1 1 383 532 1 352 532 @a
-1 -1 384 533 1 1 383 532 @b
384 533 -1 1 416 532 1 384 532 @a
-1 -1 417 533 1 1 416 532 @b
417 533 -1 1 448 532 1 417 532 @a
-1 -1 449 533 1 1 448 532 @b
449 533 -1 1 481 532 1 449 532 @a
-1 -1 482 533 1 1 481 532 @b
482 533 -1 1 513 532 1 482 532 @a
-1 -1 514 533 1 1 513 532 @b
514 533 -1 1 545 532 1 514 532 @a
-1 -1 546 533 1 1 545 532 @b
-1 -1 86 551 1 1 85 533 @b
-1 -1 158 551 1 1 157 533 @b
-1 -1 190 551 1 1 189 533 @b
-1 -1 222 551 1 1 221 533 @b
-1 -1 255 551 1 1 254 533 @b
-1 -1 287 551 1 1 286 533 @b
-1 -1 320 551 1 1 319 533 @b
-1 -1 352 551 1 1 351 533 @b
-1 -1 384 551 1 1 383 533 @b
-1 -1 417 551 1 1 416 533 @b
-1 -1 449 551 1 1 448 533 @b
-1 -1 482 551 1 1 481 533 @b
-1 -1 514 551 1 1 513 533 @b
-1 -1 546 551 1 1 545 533 @b
90 567 :M
(2)S
194 567 :M
(B)S
291 567 :M
(A)S
388 567 :M
(D)S
486 567 :M
(C)S
-1 -1 86 552 1 1 85 551 @b
86 552 -1 1 157 551 1 86 551 @a
-1 -1 158 552 1 1 157 551 @b
158 552 -1 1 189 551 1 158 551 @a
-1 -1 190 552 1 1 189 551 @b
190 552 -1 1 221 551 1 190 551 @a
-1 -1 222 552 1 1 221 551 @b
222 552 -1 1 254 551 1 222 551 @a
-1 -1 255 552 1 1 254 551 @b
255 552 -1 1 286 551 1 255 551 @a
-1 -1 287 552 1 1 286 551 @b
287 552 -1 1 319 551 1 287 551 @a
-1 -1 320 552 1 1 319 551 @b
320 552 -1 1 351 551 1 320 551 @a
-1 -1 352 552 1 1 351 551 @b
352 552 -1 1 383 551 1 352 551 @a
-1 -1 384 552 1 1 383 551 @b
384 552 -1 1 416 551 1 384 551 @a
-1 -1 417 552 1 1 416 551 @b
417 552 -1 1 448 551 1 417 551 @a
-1 -1 449 552 1 1 448 551 @b
449 552 -1 1 481 551 1 449 551 @a
-1 -1 482 552 1 1 481 551 @b
482 552 -1 1 513 551 1 482 551 @a
-1 -1 514 552 1 1 513 551 @b
514 552 -1 1 545 551 1 514 551 @a
-1 -1 546 552 1 1 545 551 @b
-1 -1 86 570 1 1 85 552 @b
-1 -1 158 570 1 1 157 552 @b
-1 -1 190 570 1 1 189 552 @b
-1 -1 222 570 1 1 221 552 @b
-1 -1 255 570 1 1 254 552 @b
-1 -1 287 570 1 1 286 552 @b
-1 -1 320 570 1 1 319 552 @b
-1 -1 352 570 1 1 351 552 @b
-1 -1 384 570 1 1 383 552 @b
-1 -1 417 570 1 1 416 552 @b
-1 -1 449 570 1 1 448 552 @b
-1 -1 482 570 1 1 481 552 @b
-1 -1 514 570 1 1 513 552 @b
-1 -1 546 570 1 1 545 552 @b
90 586 :M
(3)S
226 586 :M
(C)S
324 586 :M
(B)S
421 586 :M
(A)S
518 586 :M
(D)S
-1 -1 86 571 1 1 85 570 @b
86 571 -1 1 157 570 1 86 570 @a
-1 -1 158 571 1 1 157 570 @b
158 571 -1 1 189 570 1 158 570 @a
-1 -1 190 571 1 1 189 570 @b
190 571 -1 1 221 570 1 190 570 @a
-1 -1 222 571 1 1 221 570 @b
222 571 -1 1 254 570 1 222 570 @a
-1 -1 255 571 1 1 254 570 @b
255 571 -1 1 286 570 1 255 570 @a
-1 -1 287 571 1 1 286 570 @b
287 571 -1 1 319 570 1 287 570 @a
-1 -1 320 571 1 1 319 570 @b
320 571 -1 1 351 570 1 320 570 @a
-1 -1 352 571 1 1 351 570 @b
352 571 -1 1 383 570 1 352 570 @a
-1 -1 384 571 1 1 383 570 @b
384 571 -1 1 416 570 1 384 570 @a
-1 -1 417 571 1 1 416 570 @b
417 571 -1 1 448 570 1 417 570 @a
-1 -1 449 571 1 1 448 570 @b
449 571 -1 1 481 570 1 449 570 @a
-1 -1 482 571 1 1 481 570 @b
482 571 -1 1 513 570 1 482 570 @a
-1 -1 514 571 1 1 513 570 @b
514 571 -1 1 545 570 1 514 570 @a
-1 -1 546 571 1 1 545 570 @b
-1 -1 86 589 1 1 85 571 @b
-1 -1 86 590 1 1 85 589 @b
-1 -1 86 590 1 1 85 589 @b
86 590 -1 1 157 589 1 86 589 @a
-1 -1 158 589 1 1 157 571 @b
-1 -1 158 590 1 1 157 589 @b
158 590 -1 1 189 589 1 158 589 @a
-1 -1 190 589 1 1 189 571 @b
-1 -1 190 590 1 1 189 589 @b
190 590 -1 1 221 589 1 190 589 @a
-1 -1 222 589 1 1 221 571 @b
-1 -1 222 590 1 1 221 589 @b
222 590 -1 1 254 589 1 222 589 @a
-1 -1 255 589 1 1 254 571 @b
-1 -1 255 590 1 1 254 589 @b
255 590 -1 1 286 589 1 255 589 @a
-1 -1 287 589 1 1 286 571 @b
-1 -1 287 590 1 1 286 589 @b
287 590 -1 1 319 589 1 287 589 @a
-1 -1 320 589 1 1 319 571 @b
-1 -1 320 590 1 1 319 589 @b
320 590 -1 1 351 589 1 320 589 @a
-1 -1 352 589 1 1 351 571 @b
-1 -1 352 590 1 1 351 589 @b
352 590 -1 1 383 589 1 352 589 @a
-1 -1 384 589 1 1 383 571 @b
-1 -1 384 590 1 1 383 589 @b
384 590 -1 1 416 589 1 384 589 @a
-1 -1 417 589 1 1 416 571 @b
-1 -1 417 590 1 1 416 589 @b
417 590 -1 1 448 589 1 417 589 @a
-1 -1 449 589 1 1 448 571 @b
-1 -1 449 590 1 1 448 589 @b
449 590 -1 1 481 589 1 449 589 @a
-1 -1 482 589 1 1 481 571 @b
-1 -1 482 590 1 1 481 589 @b
482 590 -1 1 513 589 1 482 589 @a
-1 -1 514 589 1 1 513 571 @b
-1 -1 514 590 1 1 513 589 @b
514 590 -1 1 545 589 1 514 589 @a
-1 -1 546 589 1 1 545 571 @b
-1 -1 546 590 1 1 545 589 @b
-1 -1 546 590 1 1 545 589 @b
110 605 :M
f1_12 sf
6.951 .695(Page faults in physical memory, with LRU replacement)J
126 641 :M
f3_12 sf
3.31 .331(Same behavior with FIFO!  What about MIN?)J
90 678 :M
1.314(reference)A
90 696 :M
5.142 .514(phys slot)J
162 678 :M
(A)S
194 678 :M
(B)S
226 678 :M
(C)S
259 678 :M
(D)S
291 678 :M
(A)S
324 678 :M
(B)S
356 678 :M
(C)S
388 678 :M
(D)S
421 678 :M
(A)S
453 678 :M
(B)S
486 678 :M
(C)S
518 678 :M
(D)S
-1 -1 86 663 1 1 85 662 @b
-1 -1 86 663 1 1 85 662 @b
86 663 -1 1 157 662 1 86 662 @a
-1 -1 158 663 1 1 157 662 @b
158 663 -1 1 189 662 1 158 662 @a
-1 -1 190 663 1 1 189 662 @b
190 663 -1 1 221 662 1 190 662 @a
-1 -1 222 663 1 1 221 662 @b
222 663 -1 1 254 662 1 222 662 @a
-1 -1 255 663 1 1 254 662 @b
255 663 -1 1 286 662 1 255 662 @a
-1 -1 287 663 1 1 286 662 @b
287 663 -1 1 319 662 1 287 662 @a
-1 -1 320 663 1 1 319 662 @b
320 663 -1 1 351 662 1 320 662 @a
-1 -1 352 663 1 1 351 662 @b
352 663 -1 1 383 662 1 352 662 @a
-1 -1 384 663 1 1 383 662 @b
384 663 -1 1 416 662 1 384 662 @a
-1 -1 417 663 1 1 416 662 @b
417 663 -1 1 448 662 1 417 662 @a
-1 -1 449 663 1 1 448 662 @b
449 663 -1 1 481 662 1 449 662 @a
-1 -1 482 663 1 1 481 662 @b
482 663 -1 1 513 662 1 482 662 @a
-1 -1 514 663 1 1 513 662 @b
514 663 -1 1 545 662 1 514 662 @a
-1 -1 546 663 1 1 545 662 @b
-1 -1 546 663 1 1 545 662 @b
-1 -1 86 699 1 1 85 663 @b
-1 -1 158 699 1 1 157 663 @b
-1 -1 190 699 1 1 189 663 @b
-1 -1 222 699 1 1 221 663 @b
-1 -1 255 699 1 1 254 663 @b
-1 -1 287 699 1 1 286 663 @b
-1 -1 320 699 1 1 319 663 @b
-1 -1 352 699 1 1 351 663 @b
-1 -1 384 699 1 1 383 663 @b
-1 -1 417 699 1 1 416 663 @b
-1 -1 449 699 1 1 448 663 @b
-1 -1 482 699 1 1 481 663 @b
-1 -1 514 699 1 1 513 663 @b
-1 -1 546 699 1 1 545 663 @b
90 715 :M
(1)S
162 715 :M
(A)S
453 715 :M
(B)S
-1 -1 86 700 1 1 85 699 @b
86 700 -1 1 157 699 1 86 699 @a
-1 -1 158 700 1 1 157 699 @b
158 700 -1 1 189 699 1 158 699 @a
-1 -1 190 700 1 1 189 699 @b
190 700 -1 1 221 699 1 190 699 @a
-1 -1 222 700 1 1 221 699 @b
222 700 -1 1 254 699 1 222 699 @a
-1 -1 255 700 1 1 254 699 @b
255 700 -1 1 286 699 1 255 699 @a
-1 -1 287 700 1 1 286 699 @b
287 700 -1 1 319 699 1 287 699 @a
-1 -1 320 700 1 1 319 699 @b
320 700 -1 1 351 699 1 320 699 @a
-1 -1 352 700 1 1 351 699 @b
352 700 -1 1 383 699 1 352 699 @a
-1 -1 384 700 1 1 383 699 @b
384 700 -1 1 416 699 1 384 699 @a
-1 -1 417 700 1 1 416 699 @b
417 700 -1 1 448 699 1 417 699 @a
-1 -1 449 700 1 1 448 699 @b
449 700 -1 1 481 699 1 449 699 @a
-1 -1 482 700 1 1 481 699 @b
482 700 -1 1 513 699 1 482 699 @a
-1 -1 514 700 1 1 513 699 @b
514 700 -1 1 545 699 1 514 699 @a
-1 -1 546 700 1 1 545 699 @b
-1 -1 86 718 1 1 85 700 @b
-1 -1 86 719 1 1 85 718 @b
-1 -1 86 719 1 1 85 718 @b
86 719 -1 1 157 718 1 86 718 @a
-1 -1 158 718 1 1 157 700 @b
-1 -1 158 719 1 1 157 718 @b
158 719 -1 1 189 718 1 158 718 @a
-1 -1 190 718 1 1 189 700 @b
-1 -1 190 719 1 1 189 718 @b
190 719 -1 1 221 718 1 190 718 @a
-1 -1 222 718 1 1 221 700 @b
-1 -1 222 719 1 1 221 718 @b
222 719 -1 1 254 718 1 222 718 @a
-1 -1 255 718 1 1 254 700 @b
-1 -1 255 719 1 1 254 718 @b
255 719 -1 1 286 718 1 255 718 @a
-1 -1 287 718 1 1 286 700 @b
-1 -1 287 719 1 1 286 718 @b
287 719 -1 1 319 718 1 287 718 @a
-1 -1 320 718 1 1 319 700 @b
-1 -1 320 719 1 1 319 718 @b
320 719 -1 1 351 718 1 320 718 @a
-1 -1 352 718 1 1 351 700 @b
-1 -1 352 719 1 1 351 718 @b
352 719 -1 1 383 718 1 352 718 @a
-1 -1 384 718 1 1 383 700 @b
-1 -1 384 719 1 1 383 718 @b
384 719 -1 1 416 718 1 384 718 @a
-1 -1 417 718 1 1 416 700 @b
-1 -1 417 719 1 1 416 718 @b
417 719 -1 1 448 718 1 417 718 @a
-1 -1 449 718 1 1 448 700 @b
-1 -1 449 719 1 1 448 718 @b
449 719 -1 1 481 718 1 449 718 @a
-1 -1 482 718 1 1 481 700 @b
-1 -1 482 719 1 1 481 718 @b
482 719 -1 1 513 718 1 482 718 @a
-1 -1 514 718 1 1 513 700 @b
-1 -1 514 719 1 1 513 718 @b
514 719 -1 1 545 718 1 514 718 @a
-1 -1 546 718 1 1 545 700 @b
-1 -1 546 719 1 1 545 718 @b
-1 -1 546 719 1 1 545 718 @b
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(; page: 7 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 88 :M
f3_12 sf
(2)S
194 88 :M
(B)S
356 88 :M
(C)S
-1 -1 86 73 1 1 85 72 @b
-1 -1 86 73 1 1 85 72 @b
86 73 -1 1 157 72 1 86 72 @a
-1 -1 158 73 1 1 157 72 @b
158 73 -1 1 189 72 1 158 72 @a
-1 -1 190 73 1 1 189 72 @b
190 73 -1 1 221 72 1 190 72 @a
-1 -1 222 73 1 1 221 72 @b
222 73 -1 1 254 72 1 222 72 @a
-1 -1 255 73 1 1 254 72 @b
255 73 -1 1 286 72 1 255 72 @a
-1 -1 287 73 1 1 286 72 @b
287 73 -1 1 319 72 1 287 72 @a
-1 -1 320 73 1 1 319 72 @b
320 73 -1 1 351 72 1 320 72 @a
-1 -1 352 73 1 1 351 72 @b
352 73 -1 1 383 72 1 352 72 @a
-1 -1 384 73 1 1 383 72 @b
384 73 -1 1 416 72 1 384 72 @a
-1 -1 417 73 1 1 416 72 @b
417 73 -1 1 448 72 1 417 72 @a
-1 -1 449 73 1 1 448 72 @b
449 73 -1 1 481 72 1 449 72 @a
-1 -1 482 73 1 1 481 72 @b
482 73 -1 1 513 72 1 482 72 @a
-1 -1 514 73 1 1 513 72 @b
514 73 -1 1 545 72 1 514 72 @a
-1 -1 546 73 1 1 545 72 @b
-1 -1 546 73 1 1 545 72 @b
-1 -1 86 91 1 1 85 73 @b
-1 -1 158 91 1 1 157 73 @b
-1 -1 190 91 1 1 189 73 @b
-1 -1 222 91 1 1 221 73 @b
-1 -1 255 91 1 1 254 73 @b
-1 -1 287 91 1 1 286 73 @b
-1 -1 320 91 1 1 319 73 @b
-1 -1 352 91 1 1 351 73 @b
-1 -1 384 91 1 1 383 73 @b
-1 -1 417 91 1 1 416 73 @b
-1 -1 449 91 1 1 448 73 @b
-1 -1 482 91 1 1 481 73 @b
-1 -1 514 91 1 1 513 73 @b
-1 -1 546 91 1 1 545 73 @b
90 107 :M
(3)S
226 107 :M
(C)S
259 107 :M
(D)S
-1 -1 86 92 1 1 85 91 @b
86 92 -1 1 157 91 1 86 91 @a
-1 -1 158 92 1 1 157 91 @b
158 92 -1 1 189 91 1 158 91 @a
-1 -1 190 92 1 1 189 91 @b
190 92 -1 1 221 91 1 190 91 @a
-1 -1 222 92 1 1 221 91 @b
222 92 -1 1 254 91 1 222 91 @a
-1 -1 255 92 1 1 254 91 @b
255 92 -1 1 286 91 1 255 91 @a
-1 -1 287 92 1 1 286 91 @b
287 92 -1 1 319 91 1 287 91 @a
-1 -1 320 92 1 1 319 91 @b
320 92 -1 1 351 91 1 320 91 @a
-1 -1 352 92 1 1 351 91 @b
352 92 -1 1 383 91 1 352 91 @a
-1 -1 384 92 1 1 383 91 @b
384 92 -1 1 416 91 1 384 91 @a
-1 -1 417 92 1 1 416 91 @b
417 92 -1 1 448 91 1 417 91 @a
-1 -1 449 92 1 1 448 91 @b
449 92 -1 1 481 91 1 449 91 @a
-1 -1 482 92 1 1 481 91 @b
482 92 -1 1 513 91 1 482 91 @a
-1 -1 514 92 1 1 513 91 @b
514 92 -1 1 545 91 1 514 91 @a
-1 -1 546 92 1 1 545 91 @b
-1 -1 86 110 1 1 85 92 @b
-1 -1 86 111 1 1 85 110 @b
-1 -1 86 111 1 1 85 110 @b
86 111 -1 1 157 110 1 86 110 @a
-1 -1 158 110 1 1 157 92 @b
-1 -1 158 111 1 1 157 110 @b
158 111 -1 1 189 110 1 158 110 @a
-1 -1 190 110 1 1 189 92 @b
-1 -1 190 111 1 1 189 110 @b
190 111 -1 1 221 110 1 190 110 @a
-1 -1 222 110 1 1 221 92 @b
-1 -1 222 111 1 1 221 110 @b
222 111 -1 1 254 110 1 222 110 @a
-1 -1 255 110 1 1 254 92 @b
-1 -1 255 111 1 1 254 110 @b
255 111 -1 1 286 110 1 255 110 @a
-1 -1 287 110 1 1 286 92 @b
-1 -1 287 111 1 1 286 110 @b
287 111 -1 1 319 110 1 287 110 @a
-1 -1 320 110 1 1 319 92 @b
-1 -1 320 111 1 1 319 110 @b
320 111 -1 1 351 110 1 320 110 @a
-1 -1 352 110 1 1 351 92 @b
-1 -1 352 111 1 1 351 110 @b
352 111 -1 1 383 110 1 352 110 @a
-1 -1 384 110 1 1 383 92 @b
-1 -1 384 111 1 1 383 110 @b
384 111 -1 1 416 110 1 384 110 @a
-1 -1 417 110 1 1 416 92 @b
-1 -1 417 111 1 1 416 110 @b
417 111 -1 1 448 110 1 417 110 @a
-1 -1 449 110 1 1 448 92 @b
-1 -1 449 111 1 1 448 110 @b
449 111 -1 1 481 110 1 449 110 @a
-1 -1 482 110 1 1 481 92 @b
-1 -1 482 111 1 1 481 110 @b
482 111 -1 1 513 110 1 482 110 @a
-1 -1 514 110 1 1 513 92 @b
-1 -1 514 111 1 1 513 110 @b
514 111 -1 1 545 110 1 514 110 @a
-1 -1 546 110 1 1 545 92 @b
-1 -1 546 111 1 1 545 110 @b
-1 -1 546 111 1 1 545 110 @b
109 126 :M
f1_12 sf
7.177 .718(Page faults in physical memory, with MIN replacement)J
90 162 :M
7.042 .704(15.3.6 Does adding memory always reduce the number of)J
90 180 :M
9.514 .951(page faults?)J
126 216 :M
f3_12 sf
2.023 .202(Yes, for LRU, MIN.  No, for FIFO \(Belady's anomaly\))J
90 253 :M
1.314(reference)A
90 271 :M
5.142 .514(phys slot)J
162 253 :M
(A)S
194 253 :M
(B)S
226 253 :M
(C)S
259 253 :M
(D)S
291 253 :M
(A)S
324 253 :M
(B)S
356 253 :M
(E)S
388 253 :M
(A)S
421 253 :M
(B)S
453 253 :M
(C)S
486 253 :M
(D)S
518 253 :M
(E)S
-1 -1 86 238 1 1 85 237 @b
-1 -1 86 238 1 1 85 237 @b
86 238 -1 1 157 237 1 86 237 @a
-1 -1 158 238 1 1 157 237 @b
158 238 -1 1 189 237 1 158 237 @a
-1 -1 190 238 1 1 189 237 @b
190 238 -1 1 221 237 1 190 237 @a
-1 -1 222 238 1 1 221 237 @b
222 238 -1 1 254 237 1 222 237 @a
-1 -1 255 238 1 1 254 237 @b
255 238 -1 1 286 237 1 255 237 @a
-1 -1 287 238 1 1 286 237 @b
287 238 -1 1 319 237 1 287 237 @a
-1 -1 320 238 1 1 319 237 @b
320 238 -1 1 351 237 1 320 237 @a
-1 -1 352 238 1 1 351 237 @b
352 238 -1 1 383 237 1 352 237 @a
-1 -1 384 238 1 1 383 237 @b
384 238 -1 1 416 237 1 384 237 @a
-1 -1 417 238 1 1 416 237 @b
417 238 -1 1 448 237 1 417 237 @a
-1 -1 449 238 1 1 448 237 @b
449 238 -1 1 481 237 1 449 237 @a
-1 -1 482 238 1 1 481 237 @b
482 238 -1 1 513 237 1 482 237 @a
-1 -1 514 238 1 1 513 237 @b
514 238 -1 1 545 237 1 514 237 @a
-1 -1 546 238 1 1 545 237 @b
-1 -1 546 238 1 1 545 237 @b
-1 -1 86 274 1 1 85 238 @b
-1 -1 158 274 1 1 157 238 @b
-1 -1 190 274 1 1 189 238 @b
-1 -1 222 274 1 1 221 238 @b
-1 -1 255 274 1 1 254 238 @b
-1 -1 287 274 1 1 286 238 @b
-1 -1 320 274 1 1 319 238 @b
-1 -1 352 274 1 1 351 238 @b
-1 -1 384 274 1 1 383 238 @b
-1 -1 417 274 1 1 416 238 @b
-1 -1 449 274 1 1 448 238 @b
-1 -1 482 274 1 1 481 238 @b
-1 -1 514 274 1 1 513 238 @b
-1 -1 546 274 1 1 545 238 @b
90 290 :M
(1)S
162 290 :M
(A)S
259 290 :M
(D)S
356 290 :M
(E)S
-1 -1 86 275 1 1 85 274 @b
86 275 -1 1 157 274 1 86 274 @a
-1 -1 158 275 1 1 157 274 @b
158 275 -1 1 189 274 1 158 274 @a
-1 -1 190 275 1 1 189 274 @b
190 275 -1 1 221 274 1 190 274 @a
-1 -1 222 275 1 1 221 274 @b
222 275 -1 1 254 274 1 222 274 @a
-1 -1 255 275 1 1 254 274 @b
255 275 -1 1 286 274 1 255 274 @a
-1 -1 287 275 1 1 286 274 @b
287 275 -1 1 319 274 1 287 274 @a
-1 -1 320 275 1 1 319 274 @b
320 275 -1 1 351 274 1 320 274 @a
-1 -1 352 275 1 1 351 274 @b
352 275 -1 1 383 274 1 352 274 @a
-1 -1 384 275 1 1 383 274 @b
384 275 -1 1 416 274 1 384 274 @a
-1 -1 417 275 1 1 416 274 @b
417 275 -1 1 448 274 1 417 274 @a
-1 -1 449 275 1 1 448 274 @b
449 275 -1 1 481 274 1 449 274 @a
-1 -1 482 275 1 1 481 274 @b
482 275 -1 1 513 274 1 482 274 @a
-1 -1 514 275 1 1 513 274 @b
514 275 -1 1 545 274 1 514 274 @a
-1 -1 546 275 1 1 545 274 @b
-1 -1 86 293 1 1 85 275 @b
-1 -1 158 293 1 1 157 275 @b
-1 -1 190 293 1 1 189 275 @b
-1 -1 222 293 1 1 221 275 @b
-1 -1 255 293 1 1 254 275 @b
-1 -1 287 293 1 1 286 275 @b
-1 -1 320 293 1 1 319 275 @b
-1 -1 352 293 1 1 351 275 @b
-1 -1 384 293 1 1 383 275 @b
-1 -1 417 293 1 1 416 275 @b
-1 -1 449 293 1 1 448 275 @b
-1 -1 482 293 1 1 481 275 @b
-1 -1 514 293 1 1 513 275 @b
-1 -1 546 293 1 1 545 275 @b
90 309 :M
(2)S
194 309 :M
(B)S
291 309 :M
(A)S
453 309 :M
(C)S
-1 -1 86 294 1 1 85 293 @b
86 294 -1 1 157 293 1 86 293 @a
-1 -1 158 294 1 1 157 293 @b
158 294 -1 1 189 293 1 158 293 @a
-1 -1 190 294 1 1 189 293 @b
190 294 -1 1 221 293 1 190 293 @a
-1 -1 222 294 1 1 221 293 @b
222 294 -1 1 254 293 1 222 293 @a
-1 -1 255 294 1 1 254 293 @b
255 294 -1 1 286 293 1 255 293 @a
-1 -1 287 294 1 1 286 293 @b
287 294 -1 1 319 293 1 287 293 @a
-1 -1 320 294 1 1 319 293 @b
320 294 -1 1 351 293 1 320 293 @a
-1 -1 352 294 1 1 351 293 @b
352 294 -1 1 383 293 1 352 293 @a
-1 -1 384 294 1 1 383 293 @b
384 294 -1 1 416 293 1 384 293 @a
-1 -1 417 294 1 1 416 293 @b
417 294 -1 1 448 293 1 417 293 @a
-1 -1 449 294 1 1 448 293 @b
449 294 -1 1 481 293 1 449 293 @a
-1 -1 482 294 1 1 481 293 @b
482 294 -1 1 513 293 1 482 293 @a
-1 -1 514 294 1 1 513 293 @b
514 294 -1 1 545 293 1 514 293 @a
-1 -1 546 294 1 1 545 293 @b
-1 -1 86 312 1 1 85 294 @b
-1 -1 158 312 1 1 157 294 @b
-1 -1 190 312 1 1 189 294 @b
-1 -1 222 312 1 1 221 294 @b
-1 -1 255 312 1 1 254 294 @b
-1 -1 287 312 1 1 286 294 @b
-1 -1 320 312 1 1 319 294 @b
-1 -1 352 312 1 1 351 294 @b
-1 -1 384 312 1 1 383 294 @b
-1 -1 417 312 1 1 416 294 @b
-1 -1 449 312 1 1 448 294 @b
-1 -1 482 312 1 1 481 294 @b
-1 -1 514 312 1 1 513 294 @b
-1 -1 546 312 1 1 545 294 @b
90 328 :M
(3)S
226 328 :M
(C)S
324 328 :M
(B)S
486 328 :M
(D)S
-1 -1 86 313 1 1 85 312 @b
86 313 -1 1 157 312 1 86 312 @a
-1 -1 158 313 1 1 157 312 @b
158 313 -1 1 189 312 1 158 312 @a
-1 -1 190 313 1 1 189 312 @b
190 313 -1 1 221 312 1 190 312 @a
-1 -1 222 313 1 1 221 312 @b
222 313 -1 1 254 312 1 222 312 @a
-1 -1 255 313 1 1 254 312 @b
255 313 -1 1 286 312 1 255 312 @a
-1 -1 287 313 1 1 286 312 @b
287 313 -1 1 319 312 1 287 312 @a
-1 -1 320 313 1 1 319 312 @b
320 313 -1 1 351 312 1 320 312 @a
-1 -1 352 313 1 1 351 312 @b
352 313 -1 1 383 312 1 352 312 @a
-1 -1 384 313 1 1 383 312 @b
384 313 -1 1 416 312 1 384 312 @a
-1 -1 417 313 1 1 416 312 @b
417 313 -1 1 448 312 1 417 312 @a
-1 -1 449 313 1 1 448 312 @b
449 313 -1 1 481 312 1 449 312 @a
-1 -1 482 313 1 1 481 312 @b
482 313 -1 1 513 312 1 482 312 @a
-1 -1 514 313 1 1 513 312 @b
514 313 -1 1 545 312 1 514 312 @a
-1 -1 546 313 1 1 545 312 @b
-1 -1 86 331 1 1 85 313 @b
-1 -1 158 331 1 1 157 313 @b
-1 -1 190 331 1 1 189 313 @b
-1 -1 222 331 1 1 221 313 @b
-1 -1 255 331 1 1 254 313 @b
-1 -1 287 331 1 1 286 313 @b
-1 -1 320 331 1 1 319 313 @b
-1 -1 352 331 1 1 351 313 @b
-1 -1 384 331 1 1 383 313 @b
-1 -1 417 331 1 1 416 313 @b
-1 -1 449 331 1 1 448 313 @b
-1 -1 482 331 1 1 481 313 @b
-1 -1 514 331 1 1 513 313 @b
-1 -1 546 331 1 1 545 313 @b
90 347 :M
1.314(reference)A
90 365 :M
5.142 .514(phys slot)J
162 347 :M
(A)S
194 347 :M
(B)S
226 347 :M
(C)S
259 347 :M
(D)S
291 347 :M
(A)S
324 347 :M
(B)S
356 347 :M
(E)S
388 347 :M
(A)S
421 347 :M
(B)S
453 347 :M
(C)S
486 347 :M
(D)S
518 347 :M
(E)S
-1 -1 86 332 1 1 85 331 @b
86 332 -1 1 157 331 1 86 331 @a
-1 -1 158 332 1 1 157 331 @b
158 332 -1 1 189 331 1 158 331 @a
-1 -1 190 332 1 1 189 331 @b
190 332 -1 1 221 331 1 190 331 @a
-1 -1 222 332 1 1 221 331 @b
222 332 -1 1 254 331 1 222 331 @a
-1 -1 255 332 1 1 254 331 @b
255 332 -1 1 286 331 1 255 331 @a
-1 -1 287 332 1 1 286 331 @b
287 332 -1 1 319 331 1 287 331 @a
-1 -1 320 332 1 1 319 331 @b
320 332 -1 1 351 331 1 320 331 @a
-1 -1 352 332 1 1 351 331 @b
352 332 -1 1 383 331 1 352 331 @a
-1 -1 384 332 1 1 383 331 @b
384 332 -1 1 416 331 1 384 331 @a
-1 -1 417 332 1 1 416 331 @b
417 332 -1 1 448 331 1 417 331 @a
-1 -1 449 332 1 1 448 331 @b
449 332 -1 1 481 331 1 449 331 @a
-1 -1 482 332 1 1 481 331 @b
482 332 -1 1 513 331 1 482 331 @a
-1 -1 514 332 1 1 513 331 @b
514 332 -1 1 545 331 1 514 331 @a
-1 -1 546 332 1 1 545 331 @b
-1 -1 86 368 1 1 85 332 @b
-1 -1 158 368 1 1 157 332 @b
-1 -1 190 368 1 1 189 332 @b
-1 -1 222 368 1 1 221 332 @b
-1 -1 255 368 1 1 254 332 @b
-1 -1 287 368 1 1 286 332 @b
-1 -1 320 368 1 1 319 332 @b
-1 -1 352 368 1 1 351 332 @b
-1 -1 384 368 1 1 383 332 @b
-1 -1 417 368 1 1 416 332 @b
-1 -1 449 368 1 1 448 332 @b
-1 -1 482 368 1 1 481 332 @b
-1 -1 514 368 1 1 513 332 @b
-1 -1 546 368 1 1 545 332 @b
90 384 :M
(1)S
162 384 :M
(A)S
356 384 :M
(E)S
486 384 :M
(D)S
-1 -1 86 369 1 1 85 368 @b
86 369 -1 1 157 368 1 86 368 @a
-1 -1 158 369 1 1 157 368 @b
158 369 -1 1 189 368 1 158 368 @a
-1 -1 190 369 1 1 189 368 @b
190 369 -1 1 221 368 1 190 368 @a
-1 -1 222 369 1 1 221 368 @b
222 369 -1 1 254 368 1 222 368 @a
-1 -1 255 369 1 1 254 368 @b
255 369 -1 1 286 368 1 255 368 @a
-1 -1 287 369 1 1 286 368 @b
287 369 -1 1 319 368 1 287 368 @a
-1 -1 320 369 1 1 319 368 @b
320 369 -1 1 351 368 1 320 368 @a
-1 -1 352 369 1 1 351 368 @b
352 369 -1 1 383 368 1 352 368 @a
-1 -1 384 369 1 1 383 368 @b
384 369 -1 1 416 368 1 384 368 @a
-1 -1 417 369 1 1 416 368 @b
417 369 -1 1 448 368 1 417 368 @a
-1 -1 449 369 1 1 448 368 @b
449 369 -1 1 481 368 1 449 368 @a
-1 -1 482 369 1 1 481 368 @b
482 369 -1 1 513 368 1 482 368 @a
-1 -1 514 369 1 1 513 368 @b
514 369 -1 1 545 368 1 514 368 @a
-1 -1 546 369 1 1 545 368 @b
-1 -1 86 387 1 1 85 369 @b
-1 -1 158 387 1 1 157 369 @b
-1 -1 190 387 1 1 189 369 @b
-1 -1 222 387 1 1 221 369 @b
-1 -1 255 387 1 1 254 369 @b
-1 -1 287 387 1 1 286 369 @b
-1 -1 320 387 1 1 319 369 @b
-1 -1 352 387 1 1 351 369 @b
-1 -1 384 387 1 1 383 369 @b
-1 -1 417 387 1 1 416 369 @b
-1 -1 449 387 1 1 448 369 @b
-1 -1 482 387 1 1 481 369 @b
-1 -1 514 387 1 1 513 369 @b
-1 -1 546 387 1 1 545 369 @b
90 403 :M
(2)S
194 403 :M
(B)S
388 403 :M
(A)S
518 403 :M
(E)S
-1 -1 86 388 1 1 85 387 @b
86 388 -1 1 157 387 1 86 387 @a
-1 -1 158 388 1 1 157 387 @b
158 388 -1 1 189 387 1 158 387 @a
-1 -1 190 388 1 1 189 387 @b
190 388 -1 1 221 387 1 190 387 @a
-1 -1 222 388 1 1 221 387 @b
222 388 -1 1 254 387 1 222 387 @a
-1 -1 255 388 1 1 254 387 @b
255 388 -1 1 286 387 1 255 387 @a
-1 -1 287 388 1 1 286 387 @b
287 388 -1 1 319 387 1 287 387 @a
-1 -1 320 388 1 1 319 387 @b
320 388 -1 1 351 387 1 320 387 @a
-1 -1 352 388 1 1 351 387 @b
352 388 -1 1 383 387 1 352 387 @a
-1 -1 384 388 1 1 383 387 @b
384 388 -1 1 416 387 1 384 387 @a
-1 -1 417 388 1 1 416 387 @b
417 388 -1 1 448 387 1 417 387 @a
-1 -1 449 388 1 1 448 387 @b
449 388 -1 1 481 387 1 449 387 @a
-1 -1 482 388 1 1 481 387 @b
482 388 -1 1 513 387 1 482 387 @a
-1 -1 514 388 1 1 513 387 @b
514 388 -1 1 545 387 1 514 387 @a
-1 -1 546 388 1 1 545 387 @b
-1 -1 86 406 1 1 85 388 @b
-1 -1 158 406 1 1 157 388 @b
-1 -1 190 406 1 1 189 388 @b
-1 -1 222 406 1 1 221 388 @b
-1 -1 255 406 1 1 254 388 @b
-1 -1 287 406 1 1 286 388 @b
-1 -1 320 406 1 1 319 388 @b
-1 -1 352 406 1 1 351 388 @b
-1 -1 384 406 1 1 383 388 @b
-1 -1 417 406 1 1 416 388 @b
-1 -1 449 406 1 1 448 388 @b
-1 -1 482 406 1 1 481 388 @b
-1 -1 514 406 1 1 513 388 @b
-1 -1 546 406 1 1 545 388 @b
90 422 :M
(3)S
226 422 :M
(C)S
421 422 :M
(B)S
-1 -1 86 407 1 1 85 406 @b
86 407 -1 1 157 406 1 86 406 @a
-1 -1 158 407 1 1 157 406 @b
158 407 -1 1 189 406 1 158 406 @a
-1 -1 190 407 1 1 189 406 @b
190 407 -1 1 221 406 1 190 406 @a
-1 -1 222 407 1 1 221 406 @b
222 407 -1 1 254 406 1 222 406 @a
-1 -1 255 407 1 1 254 406 @b
255 407 -1 1 286 406 1 255 406 @a
-1 -1 287 407 1 1 286 406 @b
287 407 -1 1 319 406 1 287 406 @a
-1 -1 320 407 1 1 319 406 @b
320 407 -1 1 351 406 1 320 406 @a
-1 -1 352 407 1 1 351 406 @b
352 407 -1 1 383 406 1 352 406 @a
-1 -1 384 407 1 1 383 406 @b
384 407 -1 1 416 406 1 384 406 @a
-1 -1 417 407 1 1 416 406 @b
417 407 -1 1 448 406 1 417 406 @a
-1 -1 449 407 1 1 448 406 @b
449 407 -1 1 481 406 1 449 406 @a
-1 -1 482 407 1 1 481 406 @b
482 407 -1 1 513 406 1 482 406 @a
-1 -1 514 407 1 1 513 406 @b
514 407 -1 1 545 406 1 514 406 @a
-1 -1 546 407 1 1 545 406 @b
-1 -1 86 425 1 1 85 407 @b
-1 -1 158 425 1 1 157 407 @b
-1 -1 190 425 1 1 189 407 @b
-1 -1 222 425 1 1 221 407 @b
-1 -1 255 425 1 1 254 407 @b
-1 -1 287 425 1 1 286 407 @b
-1 -1 320 425 1 1 319 407 @b
-1 -1 352 425 1 1 351 407 @b
-1 -1 384 425 1 1 383 407 @b
-1 -1 417 425 1 1 416 407 @b
-1 -1 449 425 1 1 448 407 @b
-1 -1 482 425 1 1 481 407 @b
-1 -1 514 425 1 1 513 407 @b
-1 -1 546 425 1 1 545 407 @b
90 441 :M
(4)S
259 441 :M
(D)S
453 441 :M
(C)S
-1 -1 86 426 1 1 85 425 @b
86 426 -1 1 157 425 1 86 425 @a
-1 -1 158 426 1 1 157 425 @b
158 426 -1 1 189 425 1 158 425 @a
-1 -1 190 426 1 1 189 425 @b
190 426 -1 1 221 425 1 190 425 @a
-1 -1 222 426 1 1 221 425 @b
222 426 -1 1 254 425 1 222 425 @a
-1 -1 255 426 1 1 254 425 @b
255 426 -1 1 286 425 1 255 425 @a
-1 -1 287 426 1 1 286 425 @b
287 426 -1 1 319 425 1 287 425 @a
-1 -1 320 426 1 1 319 425 @b
320 426 -1 1 351 425 1 320 425 @a
-1 -1 352 426 1 1 351 425 @b
352 426 -1 1 383 425 1 352 425 @a
-1 -1 384 426 1 1 383 425 @b
384 426 -1 1 416 425 1 384 425 @a
-1 -1 417 426 1 1 416 425 @b
417 426 -1 1 448 425 1 417 425 @a
-1 -1 449 426 1 1 448 425 @b
449 426 -1 1 481 425 1 449 425 @a
-1 -1 482 426 1 1 481 425 @b
482 426 -1 1 513 425 1 482 425 @a
-1 -1 514 426 1 1 513 425 @b
514 426 -1 1 545 425 1 514 425 @a
-1 -1 546 426 1 1 545 425 @b
-1 -1 86 444 1 1 85 426 @b
-1 -1 86 445 1 1 85 444 @b
-1 -1 86 445 1 1 85 444 @b
86 445 -1 1 157 444 1 86 444 @a
-1 -1 158 444 1 1 157 426 @b
-1 -1 158 445 1 1 157 444 @b
158 445 -1 1 189 444 1 158 444 @a
-1 -1 190 444 1 1 189 426 @b
-1 -1 190 445 1 1 189 444 @b
190 445 -1 1 221 444 1 190 444 @a
-1 -1 222 444 1 1 221 426 @b
-1 -1 222 445 1 1 221 444 @b
222 445 -1 1 254 444 1 222 444 @a
-1 -1 255 444 1 1 254 426 @b
-1 -1 255 445 1 1 254 444 @b
255 445 -1 1 286 444 1 255 444 @a
-1 -1 287 444 1 1 286 426 @b
-1 -1 287 445 1 1 286 444 @b
287 445 -1 1 319 444 1 287 444 @a
-1 -1 320 444 1 1 319 426 @b
-1 -1 320 445 1 1 319 444 @b
320 445 -1 1 351 444 1 320 444 @a
-1 -1 352 444 1 1 351 426 @b
-1 -1 352 445 1 1 351 444 @b
352 445 -1 1 383 444 1 352 444 @a
-1 -1 384 444 1 1 383 426 @b
-1 -1 384 445 1 1 383 444 @b
384 445 -1 1 416 444 1 384 444 @a
-1 -1 417 444 1 1 416 426 @b
-1 -1 417 445 1 1 416 444 @b
417 445 -1 1 448 444 1 417 444 @a
-1 -1 449 444 1 1 448 426 @b
-1 -1 449 445 1 1 448 444 @b
449 445 -1 1 481 444 1 449 444 @a
-1 -1 482 444 1 1 481 426 @b
-1 -1 482 445 1 1 481 444 @b
482 445 -1 1 513 444 1 482 444 @a
-1 -1 514 444 1 1 513 426 @b
-1 -1 514 445 1 1 513 444 @b
514 445 -1 1 545 444 1 514 444 @a
-1 -1 546 444 1 1 545 426 @b
-1 -1 546 445 1 1 545 444 @b
-1 -1 546 445 1 1 545 444 @b
117 460 :M
f1_12 sf
6.934 .693(Example of Belady's Anomaly with FIFO replacement)J
126 496 :M
f3_12 sf
3.916 .392(With FIFO, contents of memory can be completely different)J
126 514 :M
4.715 .471(with different number of page frames.)J
126 550 :M
3.03 .303(By contrast, with LRU or MIN, contents of memory with X pages)J
126 568 :M
2.298 .23(is a subset of contents with X +1 pages.  So with LRU or MIN,)J
126 586 :M
4.877 .488(having more pages never hurts.)J
90 622 :M
f1_14 sf
8.588 .859(15.4 Implementing LRU)J
90 658 :M
f1_12 sf
10.442 1.044(15.4.1. Perfect)J
126 676 :M
f3_12 sf
4.82 .482(Timestamp page on each reference)J
126 694 :M
3.689 .369(Keep list of pages ordered by time of reference)J
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(; page: 8 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 102 :M
f1_12 sf
8.099 .81(15.4.2 Clock algorithm)J
126 120 :M
f3_12 sf
3.577 .358(Approximate LRU \(approx to approx to MIN\))J
126 156 :M
4.86 .486(Replace )J
f1_12 sf
1.331(an)A
f3_12 sf
2.609 .261( old page, not )J
f1_12 sf
1.12(the)A
f3_12 sf
2.751 .275( old)J
f1_12 sf
.979(est)A
f3_12 sf
3.849 .385( page)J
126 192 :M
f1_12 sf
7.105 .711(Clock algorithm:)J
f3_12 sf
3.425 .342( arrange physical pages in a circle, with a)J
126 210 :M
4.438 .444(clock hand.)J
126 246 :M
4.547 .455(1. Hardware keeps )J
f1_12 sf
4.666 .467(use bit)J
f3_12 sf
4.411 .441( per physical page frame)J
126 282 :M
3.95 .395(2. Hardware sets use bit on each reference)J
126 318 :M
3.496 .35(If use bit isn't set, means not referenced in a long time)J
126 354 :M
2.684 .268(3. On page fault:)J
126 390 :M
3.093 .309(   Advance clock hand \(not real time\))J
126 408 :M
2.327 .233(   check use bit)J
126 426 :M
1.329 .133(     1 -> clear, go on)J
126 444 :M
1.824 .182(     0 -> replace page)J
126 480 :M
3.002 .3(Will it always find a page or loop infinitely? Even if all use bits)J
126 498 :M
3.331 .333(are set, it will eventually loop around, clearing all use bits ->)J
126 516 :M
-.087(FIFO)A
126 552 :M
3.671 .367(What if hand is moving slowly?)J
126 570 :M
3.635 .363(  Not many page faults and/or find page quickly)J
126 606 :M
3.832 .383(What if hand is moving quickly?)J
126 624 :M
3.295 .33(  Lots of page faults and/or lots of reference bits set.)J
126 660 :M
3.673 .367(One way to view clock algorithm: crude partitioning of pages)J
126 678 :M
3.492 .349(into two categories: young and old.  Why not partition into)J
126 696 :M
4.614 .461(more than 2 groups?)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(; page: 9 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 84 :M
f1_12 sf
7.177 .718(15.4.3 Nth Chance)J
126 120 :M
6.767 .677(Nth chance algorithm)J
f3_12 sf
4.018 .402(: don't throw page out until hand has)J
126 138 :M
4.215 .421(swept by n times)J
126 174 :M
3.398 .34(OS keeps counter per page -- # of sweeps)J
126 210 :M
2.584 .258(On page fault, OS checks use bit:)J
126 246 :M
2.422 .242(  1 => clear use and also clear counter, go on)J
126 264 :M
1.851 .185(  0 => increment counter, if < N, go on)J
162 282 :M
4.704 .47(else replace page)J
126 336 :M
2.444 .244(How do we pick N?)J
126 372 :M
2.71 .271(Why pick large N?  Better approx to LRU.)J
126 408 :M
3.432 .343(Why pick small N?  More efficient; otherwise might have to)J
126 426 :M
3.007 .301(look a long way to find free page.)J
126 462 :M
3.819 .382(Dirty pages have to be written back to disk when replaced.)J
126 480 :M
3.836 .384(Takes extra overhead to replace a dirty page, so give dirty)J
126 498 :M
4.523 .452(pages an extra chance before replacing?)J
126 534 :M
5.504 .55(Common approach:)J
126 552 :M
1.954 .195(    clean pages -- use N = 1)J
126 570 :M
2.68 .268(    dirty pages -- use N = 2  \(and write-back to disk when N=1\))J
90 606 :M
f1_12 sf
7.037 .704(15.4.4 State per page table entry)J
126 642 :M
f3_12 sf
4.345 .434(To summarize, many machines maintain four bits per page)J
126 660 :M
6.175 .617(table entry:)J
126 696 :M
f1_12 sf
1.168(use)A
f3_12 sf
3.933 .393(: set when page is referenced, cleared by clock algorithm)J
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(; page: 10 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f1_12 sf
1.223(modified)A
f3_12 sf
3.721 .372(: set when page is modified, cleared when page is)J
144 102 :M
4.897 .49(written to disk)J
126 120 :M
f1_12 sf
1.144(valid)A
f3_12 sf
3.865 .387(: ok for program to reference this page)J
126 138 :M
f1_12 sf
1.261(read-only)A
f3_12 sf
3.452 .345(: ok for program to read page, but not to modify it)J
144 156 :M
3.893 .389(\(for example, for catching modifications to code pages\))J
90 192 :M
f1_12 sf
5.59 .559(15.4.5  Do we really need a "modified" bit?)J
126 228 :M
f3_12 sf
1.939 .194(No.  Can emulate it \(BSD UNIX\).  Keep two sets of books:)J
126 246 :M
3.129 .313(    \(i\) pages user program can access without taking a fault)J
126 264 :M
2.466 .247(    \(ii\) pages in memory)J
126 300 :M
2.996 .3(Set \(i\) is a subset of set \(ii\).  Initially, mark all pages as read-)J
126 318 :M
2.666 .267(only, even data pages.  On write, trap to OS.  OS sets modified)J
126 336 :M
4.534 .453(bit, and marks page as read-write.)J
126 372 :M
4.006 .401(When page comes back in from disk, mark read-only.)J
90 408 :M
f1_12 sf
5.53 .553(15.4.6 Do we really need a "use" bit?)J
126 444 :M
f3_12 sf
2.986 .299(No.  Can emulate it, exactly the same as above:)J
126 480 :M
3.301 .33(\(i\) Mark all pages as invalid, even if in memory.)J
126 498 :M
2.666 .267(\(ii\) On read to invalid page, trap to OS.)J
126 516 :M
3.477 .348(\(iii\) OS sets use bit, and marks page read-only.)J
126 534 :M
3.636 .364(\(iv\) On write, set use and modified bit, and mark page read-)J
144 552 :M
1.189(write.)A
126 570 :M
3.578 .358(\(v\) When clock hand passes by, reset use bit and mark page as)J
144 588 :M
.93(invalid.)A
126 624 :M
2.992 .299(But remember, clock is just an approximation of LRU.  Can we)J
126 642 :M
3.992 .399(do a better approximation, given that we have to take page)J
126 660 :M
4.002 .4(faults on some reads and writes to collect use information?)J
126 678 :M
3.369 .337(Need to identify an old page, not the oldest page!)J
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(; page: 11 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.18 .318(VAX/VMS didn't have a use or modified bit, so had to come up)J
126 102 :M
3.573 .357(with some solution.  Idea was to split memory in two parts --)J
126 120 :M
6.511 .651(mapped and unmapped:)J
126 138 :M
3.437 .344(    i. Directly accessible to program \(marked as read-write\))J
162 156 :M
4.66 .466(\(managed FIFO\))J
126 174 :M
3.078 .308(     ii. Second-chance list \(marked as invalid, but in memory\))J
162 192 :M
4.448 .445(\(managed pure LRU\))J
195 195 258 270 rC
232.5 219.5 59 24 rS
232.5 377.5 59 24 rS
231.5 324.5 59 24 rS
232.5 273.5 59 24 rS
392.5 217.5 59 24 rS
392.5 375.5 59 24 rS
391.5 322.5 59 24 rS
392.5 271.5 59 24 rS
234 428 :M
(mapped)S
234 444 :M
(pages )S
234 460 :M
(\(FIFO\))S
396 428 :M
(second)S
396 444 :M
(chance)S
396 460 :M
(\(LRU\))S
370 290 :M
(A)S
13 -67 -19 258 410 @k
-1 -1 263 407 1 1 393 282 @b
13 212 260 414 413 @k
292 231 -1 1 412 408 1 292 230 @a
gR
gS 30 31 552 730 rC
182 480 :M
f1_12 sf
6.555 .655(Reference to page on second chance list)J
126 516 :M
f3_12 sf
4.27 .427(On page reference:)J
126 534 :M
2.47 .247(     if mapped, access at full speed)J
126 552 :M
2.56 .256(     otherwise page fault:)J
162 570 :M
4.142 .414(if on second chance list, mark read-write)J
162 588 :M
2.658 .266(   move first page on FIFO list onto end of second chance)J
126 606 :M
4.564 .456(list \(and mark invalid\))J
126 624 :M
2.347 .235(        if not on second chance list, bring into memory)J
162 642 :M
2.658 .266(   move first page on FIFO list onto end of second chance)J
162 660 :M
3.028 .303(   replace first page on second chance list)J
126 696 :M
3.716 .372(How many pages for second chance list?)J
126 714 :M
.815 .082(       if 0, FIFO)J
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(; page: 12 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
2.345 .235(       if all, LRU, but page fault on every page reference)J
126 120 :M
3.784 .378(Pick intermediate value.  Result is:)J
162 138 :M
2.935 .294(+ few disk accesses \(page only goes to disk if it is unused)J
126 156 :M
3.224 .322(for a long time\))J
162 174 :M
5.345 .535(- increased overhead trapping to OS \(software/hardware)J
126 192 :M
1.174(tradeoff\))A
90 246 :M
f1_12 sf
6.734 .673(15.4.7 Does software-loaded TLB need a use bit?)J
126 282 :M
f3_12 sf
3.123 .312(What if we have a software-loaded TLB \(as in Nachos\)?  Two)J
126 300 :M
.852(options:)A
126 336 :M
3.136 .314(1. Hardware sets use bit in TLB; when TLB entry is replaced,)J
126 354 :M
3.732 .373(software copies use bit back to page table.)J
126 390 :M
3.347 .335(2. Software manages TLB entries as FIFO list; everything not in)J
126 408 :M
3.179 .318(TLB is second-chance list, managed as strict LRU.)J
90 444 :M
f1_12 sf
6.975 .697(15.4.8 Core map)J
126 480 :M
f3_12 sf
3.087 .309(Page tables map virtual page #  -> physical  page #)J
126 516 :M
3.131 .313(Do we need the reverse?  physical page #  -> virtual page #?)J
126 552 :M
3.287 .329(Yes.  Clock algorithm runs through page frames. What if it ran)J
126 570 :M
5.659 .566(through page tables?)J
126 588 :M
3.451 .345(  \(i\) many more entries)J
126 606 :M
3.067 .307(  \(ii\) what if there is sharing?)J
90 642 :M
f1_14 sf
7.973 .797(15.5  Thrashing)J
126 678 :M
f3_12 sf
4.651 .465(Thrashing: memory overcommitted, pages tossed out while still)J
126 696 :M
1.301(needed.)A
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(; page: 13 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.874 .387(Example: One program, touches 50 pages \(each equally likely\).)J
126 102 :M
4.07 .407(Have only 40 physical page frames)J
126 138 :M
4.54 .454(If have enough pages, 200 ns/ref)J
126 156 :M
4.018 .402(If have too few pages, assume every 5th page reference, page)J
126 174 :M
1.275(fault)A
126 210 :M
2.327 .233(  4 refs x 200 ns)J
126 228 :M
2.629 .263(  1 page fault x 10 ms for disk I/O)J
126 246 :M
6.166 .617(  -----------)J
126 264 :M
2.45 .245(  result: 5 ref, 10 ms +  800ns => 2 ms/ref)J
126 318 :M
4.293 .429(Problem: system doesn't know what it's getting into.)J
126 354 :M
4.122 .412(Log more and more users into the system, eventually:)J
126 390 :M
2.765 .277(  total # of pages needed > # of pages available)J
126 444 :M
3.3 .33(So what do you do about this?)J
126 498 :M
3.025 .302(1. One process alone too big?  Change program so it needs less)J
126 516 :M
4.065 .406(memory, has better locality.  For example, split matrix multiply)J
126 534 :M
4.259 .426(up into smaller sub-matrix multiplies, that each fit into)J
126 552 :M
1.379(memory.)A
126 588 :M
4.016 .402(2. Several jobs?)J
126 624 :M
3.491 .349(    - figure out needs/process \(working set\))J
126 660 :M
2.954 .295(    - run only groups that fit \(balance sets\))J
126 678 :M
2.875 .288(      kick other processes out from memory)J
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(; page: 14 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.68 .368(Remember: issue here is not toal size of process, but rather)J
126 102 :M
3.994 .399(total number of pages being using at the moment.)J
126 138 :M
4.412 .441(How do we figure needs/process out?)J
126 174 :M
f1_12 sf
5.916 .592(Working set)J
f3_12 sf
4.667 .467( \(Denning, MIT, mid-60's\))J
126 210 :M
3.775 .378(Informally, collection of pages process is using right now)J
126 264 :M
3.244 .324(Formally,  set of pages job has referenced in last T seconds.)J
126 300 :M
2.524 .252(How do we pick T?)J
126 318 :M
2.122 .212(    1 page fault = 10 msec)J
126 336 :M
2.59 .259(    10 msec = 2 million instructions)J
126 372 :M
3.148 .315(So T needs to be a lot bigger than 1 million instructions.)J
126 408 :M
3.417 .342(How do you figure out what working set is?)J
126 444 :M
3.605 .36(\(a\) Modify clock algorithm, so that it sweeps at fixed intervals.)J
126 462 :M
4.067 .407(Keep idle time/page -- how many sec since last reference)J
126 498 :M
3.525 .352(\(b\) With second chance list -- how many seconds since got put)J
126 516 :M
3.715 .371(on 2nd chance list)J
126 552 :M
4 .4(Now that you know how many pages each program needs, what)J
126 570 :M
3.839 .384(to do?)J
126 606 :M
f1_12 sf
8.669 .867(Balance set)J
126 624 :M
f3_12 sf
1.94 .194(   1. if all fit? done)J
126 642 :M
2.923 .292(   2. if not? throw out fat cats.  Bring them back eventually.)J
126 678 :M
2.384 .238(What if T is too big?)J
126 714 :M
3.644 .364(  waste memory; too few programs fit in memory)J
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(; page: 15 of 15)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 102 :M
f3_12 sf
2.653 .265(What if T is too small?)J
126 138 :M
3.979 .398(  thrashing)J
126 174 :M
3.222 .322(Too big is better than too small!)J
90 210 :M
f1_14 sf
11.193 1.119(15.6 Fairness)J
126 228 :M
f3_12 sf
2.817 .282(On a page fault, do you consider all pages in one pool, or only)J
126 246 :M
3.951 .395(those of the process that caused the page fault?)J
126 282 :M
f1_12 sf
5.4 .54(Global replacement )J
f3_12 sf
3.434 .343(\(UNIX\) -- all pages in one pool.)J
126 318 :M
3.21 .321(More flexible -- if my process needs a lot, and you need a little,)J
126 336 :M
3.516 .352(I can grab pages from you.  Problem -- one turkey can ruin)J
126 354 :M
3.854 .385(whole system \(want to favor jobs that need only few pages!\))J
126 390 :M
f1_12 sf
1.15(Per-process)A
f3_12 sf
3.641 .364( \(VMS\) -- give each a separate pool, for example,)J
126 408 :M
3.309 .331(a separate clock for each process.  Less flexible.)J
126 444 :M
.716(Example:)A
126 462 :M
3.793 .379(    intermittent interactive job \(emacs\))J
126 480 :M
2.736 .274(    batch job \(compilation\))J
126 516 :M
3.871 .387(When compilation is over, emacs pages have to be brought)J
126 534 :M
4.085 .408(back in, and no history information.)J
endp
%%Trailer
end		% md
%%EOF
