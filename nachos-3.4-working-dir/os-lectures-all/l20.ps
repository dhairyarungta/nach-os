%!PS-Adobe-3.0
%%Title: (l20)
%%Creator: (Microsoft Word: LaserWriter 8 8.1.1)
%%CreationDate: (0:55 Monday, April 10, 1995)
%%For: (tom)
%%Pages: 11
%%DocumentFonts: Times-Bold Times-Roman
%%DocumentNeededFonts: Times-Bold Times-Roman
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -31 -30 761 582
%ADO_ImageableArea: 0 0 730 552
%%EndComments
/md 153 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(tom)setjob
/pT[1 0 0 -1 30 761]def/mT[1 0 0 -1 30 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Roman
/f0_1/Times-Bold :mre
/f1_1 f0_1 1.087 scf
/f1_14 f1_1 14 scf
/f1_12 f1_1 12 scf
/f2_1/Times-Roman :mre
/f3_1 f2_1 1.087 scf
/f3_12 f3_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(tom; page: 1 of 11)setjob
%%EndPageSetup
gS 0 0 552 730 rC
60 55 :M
f1_14 sf
7.975 .797(Lecture 20: Networks and Distributed Systems)J
60 91 :M
7.292 .729(20.0 Main Points)J
96 109 :M
f3_12 sf
5.088 .509(Motivation for distributed vs. centralized systems)J
96 127 :M
5.041 .504(Survey of network technologies)J
228 181 :M
f1_12 sf
10.673 1.067(Technology trends)J
77 200 :M
f3_12 sf
1.36(decade)A
1 G
-30 -31 1 1 rF
120 200 :M
-30 -31 :T
psb
/wp$gray 1 def

/wp$top 234 def

/wp$left 85 def

/wp$right 171 def

/wp$bottom 252 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
30 31 :T
151 200 :M
0 G
1.004(technology)A
1 G
-30 -31 1 1 rF
218 200 :M
-30 -31 :T
psb
/wp$gray 1 def

/wp$top 234 def

/wp$left 171 def

/wp$right 257 def

/wp$bottom 252 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
30 31 :T
255 200 :M
0 G
3.975 .397($ per)J
245 218 :M
1.303(machine)A
343 200 :M
1.163(sales)A
335 218 :M
1.375(volume)A
415 200 :M
6.271 .627(users per)J
418 218 :M
1.303(machine)A
-1 -1 56 185 1 1 55 184 @b
-1 -1 56 185 1 1 55 184 @b
56 185 -1 1 141 184 1 56 184 @a
-1 -1 142 185 1 1 141 184 @b
142 185 -1 1 227 184 1 142 184 @a
-1 -1 228 185 1 1 227 184 @b
228 185 -1 1 314 184 1 228 184 @a
-1 -1 315 185 1 1 314 184 @b
315 185 -1 1 400 184 1 315 184 @a
-1 -1 401 185 1 1 400 184 @b
401 185 -1 1 487 184 1 401 184 @a
-1 -1 488 185 1 1 487 184 @b
-1 -1 488 185 1 1 487 184 @b
-1 -1 56 221 1 1 55 185 @b
-1 -1 142 221 1 1 141 185 @b
-1 -1 228 221 1 1 227 185 @b
-1 -1 315 221 1 1 314 185 @b
-1 -1 401 221 1 1 400 185 @b
-1 -1 488 221 1 1 487 185 @b
86 237 :M
1.512(50's)A
182 237 :M
(-)S
254 237 :M
1.28($10M)A
346 237 :M
2.217(100)A
424 237 :M
1.498(1000's)A
-1 -1 56 222 1 1 55 221 @b
56 222 -1 1 141 221 1 56 221 @a
-1 -1 142 222 1 1 141 221 @b
142 222 -1 1 227 221 1 142 221 @a
-1 -1 228 222 1 1 227 221 @b
228 222 -1 1 314 221 1 228 221 @a
-1 -1 315 222 1 1 314 221 @b
315 222 -1 1 400 221 1 315 221 @a
-1 -1 401 222 1 1 400 221 @b
401 222 -1 1 487 221 1 401 221 @a
-1 -1 488 222 1 1 487 221 @b
-1 -1 56 240 1 1 55 222 @b
-1 -1 142 240 1 1 141 222 @b
-1 -1 228 240 1 1 227 222 @b
-1 -1 315 240 1 1 314 222 @b
-1 -1 401 240 1 1 400 222 @b
-1 -1 488 240 1 1 487 222 @b
86 256 :M
1.512(60's)A
148 256 :M
1.382(mainframes)A
258 256 :M
1.18($1M)A
346 256 :M
.77(10K)A
428 256 :M
1.503(100's)A
-1 -1 56 241 1 1 55 240 @b
56 241 -1 1 141 240 1 56 240 @a
-1 -1 142 241 1 1 141 240 @b
142 241 -1 1 227 240 1 142 240 @a
-1 -1 228 241 1 1 227 240 @b
228 241 -1 1 314 240 1 228 240 @a
-1 -1 315 241 1 1 314 240 @b
315 241 -1 1 400 240 1 315 240 @a
-1 -1 401 241 1 1 400 240 @b
401 241 -1 1 487 240 1 401 240 @a
-1 -1 488 241 1 1 487 240 @b
-1 -1 56 259 1 1 55 241 @b
-1 -1 142 259 1 1 141 241 @b
-1 -1 228 259 1 1 227 241 @b
-1 -1 315 259 1 1 314 241 @b
-1 -1 401 259 1 1 400 241 @b
-1 -1 488 259 1 1 487 241 @b
86 275 :M
1.512(70's)A
1 G
-30 -31 1 1 rF
111 275 :M
-30 -31 :T
psb
/wp$gray 1 def

/wp$top 309 def

/wp$left 85 def

/wp$right 171 def

/wp$bottom 327 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
30 31 :T
168 275 :M
0 G
1.436(mini-)A
152 293 :M
1.334(computers)A
252 275 :M
.874($100K)A
1 G
-30 -31 1 1 rF
291 275 :M
-30 -31 :T
psb
/wp$gray 1 def

/wp$top 309 def

/wp$left 257 def

/wp$right 344 def

/wp$bottom 327 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
30 31 :T
348 275 :M
0 G
1.883(1M)A
1 G
-30 -31 1 1 rF
368 275 :M
-30 -31 :T
psb
/wp$gray 1 def

/wp$top 309 def

/wp$left 344 def

/wp$right 430 def

/wp$bottom 327 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
30 31 :T
432 275 :M
0 G
1.512(10's)A
1 G
-30 -31 1 1 rF
457 275 :M
-30 -31 :T
psb
/wp$gray 1 def

/wp$top 309 def

/wp$left 430 def

/wp$right 517 def

/wp$bottom 327 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
30 31 :T
0 G
-1 -1 56 260 1 1 55 259 @b
56 260 -1 1 141 259 1 56 259 @a
-1 -1 142 260 1 1 141 259 @b
142 260 -1 1 227 259 1 142 259 @a
-1 -1 228 260 1 1 227 259 @b
228 260 -1 1 314 259 1 228 259 @a
-1 -1 315 260 1 1 314 259 @b
315 260 -1 1 400 259 1 315 259 @a
-1 -1 401 260 1 1 400 259 @b
401 260 -1 1 487 259 1 401 259 @a
-1 -1 488 260 1 1 487 259 @b
-1 -1 56 296 1 1 55 260 @b
-1 -1 142 296 1 1 141 260 @b
-1 -1 228 296 1 1 227 260 @b
-1 -1 315 296 1 1 314 260 @b
-1 -1 401 296 1 1 400 260 @b
-1 -1 488 296 1 1 487 260 @b
86 312 :M
1.512(80's)A
173 312 :M
.209(PC's)A
256 312 :M
.672($10K)A
340 312 :M
1.613(100M)A
440 312 :M
(1)S
-1 -1 56 297 1 1 55 296 @b
56 297 -1 1 141 296 1 56 296 @a
-1 -1 142 297 1 1 141 296 @b
142 297 -1 1 227 296 1 142 296 @a
-1 -1 228 297 1 1 227 296 @b
228 297 -1 1 314 296 1 228 296 @a
-1 -1 315 297 1 1 314 296 @b
315 297 -1 1 400 296 1 315 296 @a
-1 -1 401 297 1 1 400 296 @b
401 297 -1 1 487 296 1 401 296 @a
-1 -1 488 297 1 1 487 296 @b
-1 -1 56 315 1 1 55 297 @b
-1 -1 142 315 1 1 141 297 @b
-1 -1 228 315 1 1 227 297 @b
-1 -1 315 315 1 1 314 297 @b
-1 -1 401 315 1 1 400 297 @b
-1 -1 488 315 1 1 487 297 @b
86 331 :M
1.512(90's)A
156 331 :M
1.274(portables)A
260 331 :M
.27($1K)A
346 331 :M
1.128(10B)A
429 331 :M
2.603(1/10)A
-1 -1 56 316 1 1 55 315 @b
56 316 -1 1 141 315 1 56 315 @a
-1 -1 142 316 1 1 141 315 @b
142 316 -1 1 227 315 1 142 315 @a
-1 -1 228 316 1 1 227 315 @b
228 316 -1 1 314 315 1 228 315 @a
-1 -1 315 316 1 1 314 315 @b
315 316 -1 1 400 315 1 315 315 @a
-1 -1 401 316 1 1 400 315 @b
401 316 -1 1 487 315 1 401 315 @a
-1 -1 488 316 1 1 487 315 @b
-1 -1 56 334 1 1 55 316 @b
-1 -1 56 335 1 1 55 334 @b
-1 -1 56 335 1 1 55 334 @b
56 335 -1 1 141 334 1 56 334 @a
-1 -1 142 334 1 1 141 316 @b
-1 -1 142 335 1 1 141 334 @b
142 335 -1 1 227 334 1 142 334 @a
-1 -1 228 334 1 1 227 316 @b
-1 -1 228 335 1 1 227 334 @b
228 335 -1 1 314 334 1 228 334 @a
-1 -1 315 334 1 1 314 316 @b
-1 -1 315 335 1 1 314 334 @b
315 335 -1 1 400 334 1 315 334 @a
-1 -1 401 334 1 1 400 316 @b
-1 -1 401 335 1 1 400 334 @b
401 335 -1 1 487 334 1 401 334 @a
-1 -1 488 334 1 1 487 316 @b
-1 -1 488 335 1 1 487 334 @b
-1 -1 488 335 1 1 487 334 @b
60 386 :M
f1_14 sf
8.733 .873(20.1 Centralized vs. Distributed Systems)J
96 422 :M
f1_12 sf
8.554 .855(Distributed systems)J
f3_12 sf
6.109 .611(: physically separate computers working)J
96 440 :M
1.324(together)A
96 476 :M
4.832 .483(Why do we need distributed systems?)J
96 530 :M
3.459 .346(  Cheaper and easier to build lots of simple computers)J
96 566 :M
3.784 .378(  Easier to add power incrementally)J
96 620 :M
5.316 .532(Promise of distributed systems:)J
96 656 :M
3.313 .331(    Higher availability -- one machine goes down, use another)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(tom; page: 2 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.192 .319(    Better reliability  -- store data in multiple locations)J
126 120 :M
3.148 .315(    More security -- each piece easier to make secure)J
126 174 :M
4.816 .482(Reality has been disappointing:)J
126 210 :M
3.878 .388(  Worse availability -- depend on every machine being up)J
126 246 :M
3.483 .348(  Worse reliability -- can lose data if any machine crashes)J
126 282 :M
3.693 .369(  Worse security -- anyone in world can break into system)J
126 336 :M
3.445 .344(Key idea: Coordination is more difficult, because can only use)J
126 354 :M
4.016 .402(network for coordination.  What would be easy in centralized)J
126 372 :M
3.947 .395(system, becomes a lot more difficult.)J
90 426 :M
f1_14 sf
10.625 1.063(20.2 Definitions)J
126 444 :M
f1_12 sf
1.257(Network)A
f3_12 sf
3.911 .391(: physical connection to allow two computers to)J
126 462 :M
1.043(communicate.)A
126 465 364 206 rC
192 557 24.5 @e
-1 -1 252 518 1 1 311 483 @b
311 484 -1 1 379 527 1 311 483 @a
378 528 -1 1 380 635 1 378 527 @a
-1 -1 276 671 1 1 379 635 @b
-1 -1 276 671 1 1 295 553 @b
251 518 -1 1 296 553 1 251 517 @a
50 48 453.5 571.5 @f
178 564 :M
-.684(CPU)A
438 573 :M
-.684(CPU)A
292 548 :M
(Network)S
215 548 -1 1 293 563 1 215 547 @a
378 559 -1 1 431 558 1 378 558 @a
gR
gS 30 31 552 730 rC
126 686 :M
f1_12 sf
1.306(Packet)A
f3_12 sf
4.088 .409(: unit of transfer, sequence of bits carried over network)J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(tom; page: 3 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
162 84 :M
f3_12 sf
3.813 .381(Network carries packets from one CPU to another.)J
126 102 :M
5.169 .517(Destination gets interrupt when packet arrives.)J
126 138 :M
f1_12 sf
1.223(Protocol)A
f3_12 sf
4.193 .419(: agreement between two parties as to how)J
126 156 :M
4.762 .476(information is to be transmitted.)J
90 210 :M
f1_14 sf
9.357 .936(20.3 Broadcast Networks)J
126 246 :M
f3_12 sf
5.653 .565(Broadcast networks: shared communication medium.)J
126 282 :M
3.528 .353(For example, shared medium can be a wire -- all hosts listen to)J
126 300 :M
3.138 .314(wire.  Inside a computer, this is called a "bus" -- a shared set of)J
126 318 :M
4.224 .422(wires between the CPU and the memory modules)J
126 354 :M
4.81 .481(Ethernet is an example broadcast network \(10 Mbits/sec\))J
126 372 :M
4.632 .463(Another example: cellular phones \(100Kb - 1Mbit/sec\).)J
90 408 :M
f1_12 sf
10.854 1.085(20.3.1 Delivery)J
126 426 :M
f3_12 sf
3.858 .386(When you broadcast a packet, how does receiver know who it)J
126 444 :M
3.781 .378(is for?)J
126 480 :M
3.877 .388(Put header on front of packet:)J
126 498 :M
2.039 .204(      Destination | Packet)J
126 534 :M
4.516 .452(For example, header would contain unique machine # \(network)J
126 552 :M
3.76 .376(address\) of target.  Everyone gets packet, discards if not the)J
126 570 :M
3.581 .358(target.  In Ethernet, this check is done in hardware; no)J
126 588 :M
3.966 .397(interrupt if not for you.)J
126 624 :M
3.307 .331(Of course, security problem -- anyone can listen in!  If you can)J
126 642 :M
4.172 .417(break into any machine on campus, reprogram it to start)J
126 660 :M
4.292 .429(interrupting on every packet, can see passwords go over the)J
126 678 :M
1.286(network.)A
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(tom; page: 4 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.326 .333(This is an example of layering: we're going to build up complex)J
126 102 :M
3.888 .389(network protocols by layering more and more stuff on top of)J
126 120 :M
5.753 .575(the packet.)J
90 156 :M
f1_12 sf
10.984 1.098(20.3.2 Arbitration)J
126 174 :M
f3_12 sf
4.094 .409(How do you machines arbitrate for use of shared medium?)J
126 210 :M
4.57 .457(Aloha network \(70's\) -- packet radio between Hawaiian islands)J
126 246 :M
4.324 .432(Arbitration: blind broadcast, with checksum at end of packet.)J
126 264 :M
3.838 .384(If received ok \(not garbled\), send back an acknowlegment.  If)J
126 282 :M
4.288 .429(not received ok, discard.)J
126 318 :M
4.219 .422(Need checksum anyway, in case airplane flies overhead \(or)J
126 336 :M
3.996 .4(maybe a surfer goes by\), and packet gets garbled.)J
126 372 :M
3.399 .34(Sender waits for a while, and if doesn't get an)J
126 390 :M
4.267 .427(acknowledgement, re-transmits.  So if two senders try to send)J
126 408 :M
4.149 .415(at same time, both get garbled, both simply re-send later.)J
126 444 :M
3.891 .389(Problem: stability.  What if load increases?)J
126 480 :M
3.203 .32(More collisions -> less gets through -> more re-send -> more)J
126 498 :M
2.24 .224(load ->)J
126 534 :M
4.05 .405(Ethernet -- early 80's, first practical local area network \(Xerox)J
126 552 :M
2.728 .273(PARC\).  10 Mb/s.  Most common LAN for UNIX environments,)J
126 570 :M
3.192 .319(becoming more common in PC's.  What we have in the)J
126 588 :M
1.407(department.)A
126 642 :M
3.556 .356(Used wire instead of radio, but still broadcast:  all machines tap)J
126 660 :M
3.509 .351(into single wire, listen to all packets.)J
126 696 :M
3.334 .333(Key advance was in a new way to do arbitration.  Three pieces:)J
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(tom; page: 5 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.949 .395(1. carrier sense -- don't send unless idle)J
126 120 :M
3.331 .333(2. collision detect -- sender checks if packet is trampled.  If so,)J
126 138 :M
4.563 .456(abort, wait, and retry.)J
126 174 :M
3.322 .332(How long should I wait, after trying to send and failing?  What)J
126 192 :M
3.377 .338(if everyone waits  the same length of time?  We'd all keep)J
126 210 :M
5.355 .536(colliding forever.)J
126 246 :M
3.115 .312(Also, what if load increases?  More likely to get collisions.)J
126 282 :M
4.071 .407(3. Adaptive randomized waiting strategy -- if try to send, and)J
126 300 :M
3.759 .376(get collision, means there are a number of people trying to)J
126 318 :M
3.229 .323(send, so pick bigger mean wait time.  If collide again, pick even)J
126 336 :M
5.097 .51(bigger wait.)J
90 390 :M
f1_14 sf
9.212 .921(20.4 The Internet)J
126 408 :M
f3_12 sf
4.172 .417(What happens if you need more bandwidth than a single)J
126 426 :M
1.254(Ethernet?)A
126 462 :M
3.418 .342(For example, SUN has > 10000 workstations.)J
126 498 :M
3.461 .346(Buy two Ethernets?  If so, how do machines on each network)J
126 516 :M
4.173 .417(talk to each other?)J
126 552 :M
4.225 .422(Put machine that straddles both networks.  Lots of different)J
126 570 :M
4.042 .404(words for this function: router, gateway, bridge, repeater.  But)J
126 588 :M
3.416 .342(basically, acts like a switch.  Machine watches all packets on)J
126 606 :M
3.596 .36(each Ethernet, and if packet is for machine on other one, then)J
126 624 :M
4.654 .465(copies packet over.)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(tom; page: 6 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 72 292 192 rC
-4 -4 363 229 4 4 359 108 @b
391.5 116.5 24 22 rS
392.5 154.5 24 22 rS
392.5 192.5 24 22 rS
359 127 -1 1 390 126 1 359 126 @a
361 165 -1 1 392 164 1 361 164 @a
362 202 -1 1 393 201 1 362 201 @a
-4 -4 210 233 4 4 206 112 @b
153.5 119.5 24 22 rS
153.5 157.5 24 22 rS
152.5 195.5 24 22 rS
177 131 -1 1 208 130 1 177 130 @a
176 169 -1 1 207 168 1 176 168 @a
177 205 -1 1 208 204 1 177 204 @a
207 118 -1 1 273 117 1 207 117 @a
273.5 107.5 24 22 rS
298 117 -1 1 360 116 1 298 116 @a
177 259 :M
f3_12 sf
(Ethernet)S
331 256 :M
(Ethernet)S
gR
gS 30 31 552 730 rC
126 315 :M
f3_12 sf
3.661 .366(The Internet is just a generalization of this.  Internet =)J
126 333 :M
4.111 .411(interconnecting local area networks.  Local networks can be)J
126 351 :M
4.156 .416(anything -- Ethernet, AppleTalk, FDDI, even phone company)J
126 369 :M
4.194 .419(wires, but building blocks are machines that straddle two or)J
126 387 :M
6.9 .69(more networks.)J
126 390 297 177 rC
156 440 -1 1 221 439 1 156 439 @a
157 465 -1 1 220 464 1 157 464 @a
157 492 -1 1 220 491 1 157 491 @a
356 498 -1 1 419 497 1 356 497 @a
355 466 -1 1 418 465 1 355 465 @a
355 438 -1 1 418 437 1 355 437 @a
153 538 :M
(Berkeley)S
375 537 :M
(MIT)S
153 562 :M
(Ethernets)S
359 557 :M
(Ethernets)S
228 425 :M
(AT&T)S
207.5 448.5 14 8 rS
208.5 476.5 12 8 rS
353.5 478.5 13 9 rS
353.5 445.5 13 11 rS
302 427 :M
(AT&T)S
248 407 :M
(CMU Ethernets)S
275.5 417.5 11 12 rS
-1 -1 221 453 1 1 274 425 @b
287 424 -1 1 354 449 1 287 423 @a
gR
gS 30 31 552 730 rC
90 600 :M
f1_12 sf
9.652 .965(20.4.1 Routing)J
126 618 :M
f3_12 sf
3.495 .349(How do packets get to their destination?  Simple if there's a)J
126 636 :M
4.462 .446(single machine that straddles all networks, but that won't work)J
126 654 :M
5.286 .529(in the Internet!)J
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(tom; page: 7 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.608 .361(If packet has to go several hops before it gets to destination,)J
126 102 :M
4.809 .481(and router straddles several networks, how do routers know)J
126 120 :M
4.892 .489(how to forward packets?)J
126 156 :M
4.096 .41(To answer this, some definitions:)J
126 174 :M
.521 .052(  )J
f1_12 sf
1.431(Name)A
f3_12 sf
3.06 .306( -- Mom, cory)J
126 210 :M
.684 .068(  )J
f1_12 sf
1.506(Address)A
f3_12 sf
4.453 .445( -- phone #, network address)J
126 246 :M
.632 .063(  )J
f1_12 sf
1.421(Route)A
f3_12 sf
3.338 .334( -- how do we get there from here)J
126 300 :M
4.023 .402(Internet solution: routing tables.  Each router looks at packet)J
126 318 :M
3.36 .336(header, does table lookup to decide which link to use to get it)J
126 336 :M
4.804 .48(closer to destination.)J
126 372 :M
3.698 .37(Also, all machine on the same local area network, have common)J
126 390 :M
5.484 .548(portion of address/machine id.)J
126 426 :M
4.524 .452(Routing table contains:)J
126 444 :M
3.145 .314(   Destination LAN --> output link that gets closer to destination)J
126 480 :M
3.654 .365(How do you set up the table?  Internet has no centralized state!)J
126 498 :M
3.729 .373(No single machine knows entire topology, and topology is)J
126 516 :M
6.197 .62(constantly changing!)J
126 552 :M
1.245(Instead:)A
126 588 :M
3.606 .361(1. routing table has "cost" -- number of hops to destination \(in)J
126 606 :M
3.816 .382(practice, also considers how heavily used each link is\))J
126 642 :M
4.779 .478(2. neighbors periodically exchange routing tables)J
126 678 :M
3.763 .376(3. if neighbor has cheaper route, use that one)J
126 714 :M
-.199(So:)A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(tom; page: 8 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 84 :M
f3_12 sf
3.425 .342(     initially, routers don't know about any destination)J
126 102 :M
1.122 .112(     loop)J
162 120 :M
4.677 .468(get routing table from neighbors)J
162 138 :M
5.816 .582(update routing table)J
126 141 324 298 rC
35 33 194 174 @f
35 33 361 364 @f
35 33 183 287 @f
35 33 388 290 @f
35 33 385 160 @f
-1 -1 196 273 1 1 237 247 @b
35 33 249 232 @f
208 184 -1 1 239 218 1 208 183 @a
-1 -1 266 224 1 1 374 171 @b
267 237 -1 1 371 282 1 267 236 @a
35 33 245 384 @f
185 304 -1 1 234 370 1 185 303 @a
-1 -1 261 380 1 1 343 366 @b
-1 -1 370 348 1 1 382 304 @b
35 33 431 421 @f
374 376 -1 1 419 410 1 374 375 @a
189 183 :M
(A)S
383 168 :M
(B)S
245 240 :M
(C)S
173 296 :M
(D)S
385 294 :M
(E)S
235 392 :M
(F)S
359 371 :M
(G)S
427 432 :M
(H)S
gR
gS 30 31 552 730 rC
90 490 :M
f1_14 sf
11.59 1.159(20.5 Point-to-point networks)J
126 508 :M
f3_12 sf
3.623 .362(Here's a different way of thinking about all this -- why have a)J
126 526 :M
3.779 .378(shared bus for Ethernet at all, why not simplify and only have)J
126 544 :M
6.555 .656(point-to-point links, plus routers/switches?)J
126 580 :M
4.538 .454(Central idea behind ATM \(asynchronous transfer mode\), the)J
126 598 :M
4.08 .408(first commercial point-to-point LAN.  Inspiration for ATM)J
126 616 :M
5.675 .568(taken from telephone network.)J
126 652 :M
4.214 .421(A bunch of advantages:)J
126 688 :M
4.549 .455(1. Higher link performance -- can drive point-to-point)J
126 706 :M
5.006 .501(connection faster than broadcast link)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(tom; page: 9 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 102 :M
f3_12 sf
4.157 .416(2.  Greater aggregate bandwidth than single link)J
126 138 :M
3.999 .4( 3.  Can add capacity incrementally -- add more links/switches)J
126 156 :M
4.058 .406(to get more capacity)J
126 192 :M
3.892 .389( 4. Better fault tolerance \(as in Internet\))J
126 228 :M
3.675 .368( 5. Lower latency \(no need for arbitration to send, although you)J
126 246 :M
3.628 .363(do need a buffer in the switch\))J
126 300 :M
4.039 .404(This same basic design being used in everything from)J
126 318 :M
4.479 .448(workstations, to local area networks, to the Internet.)J
126 354 :M
3.568 .357(Workstations:  In a few years, open up a workstation, will see)J
126 372 :M
3.536 .354(its CPU connected to memory and graphics engine by a)J
126 390 :M
4.209 .421(switched network, instead of a bus.)J
126 426 :M
4.778 .478(Multiprocessors are already connected by hooking together lots)J
126 444 :M
2.959 .296(of small scale switches -- for instance, in a 2-D mesh, or in a)J
126 462 :M
1.269(hypercube.)A
126 498 :M
3.088 .309(In LAN's, not only ATM, but now a version of Ethernet called)J
126 516 :M
4.408 .441("switched Ethernet" -- uses same packet format, analog)J
126 534 :M
3.884 .388(signalling as Ethernet, but only one machine on each Ethernet.)J
90 588 :M
f1_12 sf
9.137 .914(20.5.1 Issues in point-to-point networks)J
126 606 :M
f3_12 sf
4.374 .437(Switches look just like computers: inputs, memory, outputs.)J
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(tom; page: 10 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 72 310 238 rC
192.5 93.5 181 185 rS
257 305 :M
f3_12 sf
(Switch)S
132 111 -1 1 193 110 1 132 110 @a
374 108 -1 1 435 107 1 374 107 @a
132 244 -1 1 193 243 1 132 243 @a
132 198 -1 1 193 197 1 132 197 @a
133 150 -1 1 194 149 1 133 149 @a
375 248 -1 1 436 247 1 375 247 @a
373 197 -1 1 434 196 1 373 196 @a
374 152 -1 1 435 151 1 374 151 @a
330 100 -1 1 362 99 1 330 99 @a
-1 -1 362 112 1 1 361 99 @b
330 112 -1 1 362 111 1 330 111 @a
330 191 -1 1 362 190 1 330 190 @a
-1 -1 362 203 1 1 361 190 @b
330 203 -1 1 362 202 1 330 202 @a
329 147 -1 1 361 146 1 329 146 @a
-1 -1 361 159 1 1 360 146 @b
329 159 -1 1 361 158 1 329 158 @a
333 240 -1 1 365 239 1 333 239 @a
-1 -1 365 252 1 1 364 239 @b
333 252 -1 1 365 251 1 333 251 @a
249.5 102.5 60 156 rS
271 124 :M
(C)S
271 140 :M
(r)S
271 156 :M
(o)S
271 172 :M
(s)S
271 188 :M
(s)S
271 204 :M
(b)S
271 220 :M
(a)S
271 236 :M
(r)S
198 104 -1 1 230 103 1 198 103 @a
-1 -1 230 116 1 1 229 103 @b
198 116 -1 1 230 115 1 198 115 @a
198 195 -1 1 230 194 1 198 194 @a
-1 -1 230 207 1 1 229 194 @b
198 207 -1 1 230 206 1 198 206 @a
197 151 -1 1 229 150 1 197 150 @a
-1 -1 229 163 1 1 228 150 @b
197 163 -1 1 229 162 1 197 162 @a
201 244 -1 1 233 243 1 201 243 @a
-1 -1 233 256 1 1 232 243 @b
201 256 -1 1 233 255 1 201 255 @a
196 272 :M
(buffers)S
324 274 :M
(buffers)S
gR
gS 30 31 552 730 rC
126 325 :M
f3_12 sf
3.6 .36(What if everyone sends to the same output?  Congestion.  What)J
126 343 :M
4.704 .47(happens when buffers fill up?)J
126 397 :M
3.348 .335(Option 1: no flow control.  Packets get dropped if they arrive)J
126 415 :M
4.326 .433(and there's no space.)J
126 451 :M
3.431 .343(If I send a lot, I'll grab the buffers, and then everyone else is)J
126 469 :M
1.062(hosed.)A
126 523 :M
3.388 .339(Option 2: flow control between switches.  Don't send me more,)J
126 541 :M
4.137 .414(unless I have room.)J
126 577 :M
3.996 .4(Problem: cross-traffic.  What if path from source to destination)J
126 595 :M
4.129 .413(is completely unused, but goes through some switch that has)J
126 613 :M
4.761 .476(buffers filled up with unrelated traffic?)J
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(tom; page: 11 of 11)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
126 72 247 128 rC
233.5 112.5 62 86 rS
174 123 -1 1 373 122 1 174 122 @a
234 123 -1 1 297 160 1 234 122 @a
175 162 -1 1 372 161 1 175 161 @a
177 191 -1 1 234 190 1 177 190 @a
-1 -1 234 191 1 1 297 163 @b
173 120 :M
f3_12 sf
(A, B)S
187 161 :M
(C)S
193 190 :M
(D)S
312 121 :M
(A)S
314 158 :M
-.477(B, C, D)A
gR
gS 30 31 552 730 rC
126 233 :M
f3_12 sf
3.021 .302(Option 3: per flow flow control.  Allocate a separate set of)J
126 251 :M
4.332 .433(buffers to each end-to-end stream, and use "don't send me)J
126 269 :M
5.156 .516(more" on each separate end-to-end stream.)J
126 305 :M
6.295 .629(Problem: fairness)J
126 308 438 94 rC
177.5 340.5 49 60 rS
300.5 339.5 49 60 rS
432.5 339.5 49 60 rS
134 347 -1 1 179 346 1 134 346 @a
132 383 -1 1 177 382 1 132 382 @a
134 344 :M
(aaaaa)S
135 380 :M
(bbbb)S
226 351 -1 1 301 350 1 226 350 @a
236 348 :M
(ababab)S
245 380 -1 1 302 379 1 245 379 @a
248 376 :M
(cccccc)S
350 347 -1 1 433 346 1 350 346 @a
355 345 :M
(acbcacbc)S
363 381 -1 1 432 380 1 363 380 @a
376 380 :M
(ddddd)S
481 346 -1 1 564 345 1 481 345 @a
494 342 :M
(dadcdbdc)S
gR
gS 30 31 552 730 rC
126 435 :M
f3_12 sf
4.46 .446(Throughput of each stream is entirely dependent on topology,)J
126 453 :M
5.178 .518(and relationship to bottleneck.)J
endp
%%Trailer
end		% md
%%EOF
